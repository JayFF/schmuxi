(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    232828,       4822]
NotebookOptionsPosition[    229646,       4714]
NotebookOutlinePosition[    229989,       4729]
CellTagsIndexPosition[    229946,       4726]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Import Labview-Map and convert to array", "Subsection",
 CellChangeTimes->{3.707392568471246*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7073925533682456`*^9, 3.7073925543272457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"files", " ", "=", " ", 
  RowBox[{"FileNames", "[", "\"\<*.txt\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7073926063082457`*^9, 3.7073926065912457`*^9}}],

Cell[BoxData["\<\"V:\\\\temp\\\\Hyowon\\\\Spectra\"\>"], "Output",
 CellChangeTimes->{
  3.70739524546924*^9, {3.707470757357931*^9, 3.7074707622407312`*^9}, 
   3.707473367373131*^9, 3.707478602155969*^9, 3.7092761374746227`*^9, 
   3.7092802215678225`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"2_DCmap_hBN-WS2-hBN_4K_25\[Micro]W_532nm_50x50x1s(30x30V).txt\"\
\>", ",", "\<\"spec-x4181-y4182.txt\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.70739524546924*^9, {3.707470757357931*^9, 3.7074707622407312`*^9}, 
   3.707473367373131*^9, 3.707478602155969*^9, 3.7092761374746227`*^9, 
   3.7092802215678225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filename", " ", "=", " ", 
  RowBox[{
  "files", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.7073926551722455`*^9, 3.7073926608092456`*^9}, 
   3.707473351336331*^9, 3.7090304889516754`*^9}],

Cell[BoxData["\<\"2_DCmap_hBN-WS2-hBN_4K_25\[Micro]W_532nm_50x50x1s(30x30V).\
txt\"\>"], "Output",
 CellChangeTimes->{
  3.7073952454882402`*^9, {3.707470758449931*^9, 3.707470762256331*^9}, {
   3.7074733517263308`*^9, 3.707473367466731*^9}, 3.707478602171569*^9, 
   3.7092761375838223`*^9, 3.7092802215834227`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dim", " ", "=", " ", "50"}], ";"}]], "Input",
 CellChangeTimes->{{3.709276105775422*^9, 3.7092761092386227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"filename", ",", " ", "\"\<TSV\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dataohneschrott", " ", "=", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"7", ";;", "1346"}], ",", ";;"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"dataohneschrott", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "spec", "]"}], "\n", 
 RowBox[{
  RowBox[{"wave", "=", 
   RowBox[{"dataohneschrott", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "wave", "]"}], "\n", 
 RowBox[{
  RowBox[{"offset", "=", " ", "98.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inttime", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"destarray", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0.0", ",", 
     RowBox[{"{", 
      RowBox[{"dim", ",", "dim", ",", "1340"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"destarray", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"spec", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"(", 
             RowBox[{"i", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "*", "dim"}]}], ")"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}], "-", 
       "offset"}], ")"}], "/", "inttime"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wavedata", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"wave", ",", 
          RowBox[{"destarray", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "b", ",", 
             RowBox[{";;", "1340"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "80"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1", ",", "80"}], "}"}]}], "]"}]}], " ", ";", " ", 
    RowBox[{"unten", " ", "nochmal", "\[IndentingNewLine]", 
     RowBox[{"Dimensions", "[", "wavedata", "]"}]}]}], "*)"}]}], "\n", 
 RowBox[{"Dimensions", "[", "destarray", "]"}]}], "Input",
 CellChangeTimes->{{3.7073926777202454`*^9, 3.7073927006022453`*^9}, {
  3.709276114074622*^9, 3.709276132701022*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1340", ",", "2500"}], "}"}]], "Output",
 CellChangeTimes->{3.7073952578502407`*^9, 3.707470774595931*^9, 
  3.707473380343131*^9, 3.7074786145888505`*^9, 3.7092761445882225`*^9, 
  3.709280228385022*^9}],

Cell[BoxData[
 RowBox[{"{", "1340", "}"}]], "Output",
 CellChangeTimes->{3.7073952578502407`*^9, 3.707470774595931*^9, 
  3.707473380343131*^9, 3.7074786145888505`*^9, 3.7092761445882225`*^9, 
  3.7092802284318223`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50", ",", "50", ",", "1340"}], "}"}]], "Output",
 CellChangeTimes->{3.7073952578502407`*^9, 3.707470774595931*^9, 
  3.707473380343131*^9, 3.7074786145888505`*^9, 3.7092761445882225`*^9, 
  3.7092802296642227`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2D map-spectral analysis", "Subsection",
 CellChangeTimes->{{3.7073927585952454`*^9, 3.7073927791142454`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "D"}], "-", "scan", "-", "Dynamic", "-", "Marker"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Specs", "=", " ", 
     RowBox[{"destarray", " ", "ohne", " ", "cosmics"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"intensity", "=", "destarray"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"xticks", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"0.1", "*", 
           RowBox[{
            RowBox[{"Dimensions", "[", "destarray", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "-", "1"}], "]"}], "*", "i", 
        "*", "j"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yticks", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"0.1", "*", 
           RowBox[{
            RowBox[{"Dimensions", "[", "destarray", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "-", "1"}], "]"}], "*", "i", 
        "*", "j"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wavelength", "=", "wave"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mymax", "[", "list_", "]"}], ":=", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{"list", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SW", "[", "list_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{"list", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "list", "]"}], "]"}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "*", 
        RowBox[{"Total", "[", "list", "]"}]}], "+", "0.01"}], 
      ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.70279335005273*^9, 3.70279335005273*^9}, {
   3.702978439946762*^9, 3.702978477417241*^9}, {3.7029785553689423`*^9, 
   3.702978617767742*^9}, 3.7029825359247956`*^9, {3.7029863077177973`*^9, 
   3.702986332786515*^9}, {3.7073953703292403`*^9, 3.7073953713632402`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}]}], ",", 
      RowBox[{"start", "=", "2"}], ",", 
      RowBox[{"stop", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "intensity", "]"}], "\[LeftDoubleBracket]",
         "3", "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"marker", " ", "=", " ", "2"}], ",", 
      RowBox[{"min", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"Min", "[", 
           RowBox[{"Min", "[", "intensity", "]"}], "]"}], "]"}]}], "]"}]}], 
      ",", 
      RowBox[{"max", "=", "5000"}], ",", 
      RowBox[{"range", "=", "50"}], ",", 
      RowBox[{"scalefactor", "=", "0.003"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"scale", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"max", "-", "min"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"scalefactor", " ", "max"}], "]"}], "-", 
             RowBox[{"Exp", "[", 
              RowBox[{"scalefactor", " ", "min"}], "]"}]}], ")"}]}], ")"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"scalefactor", "#"}], "]"}]}], "+", "min", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"max", "-", "min"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"scalefactor", 
              RowBox[{"(", 
               RowBox[{"max", "-", "min"}], ")"}]}], "]"}], "-", "1"}], 
           ")"}]}], ")"}]}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<start\>\"", ",", 
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "start", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "intensity", "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    ",", "1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{
                   "wavelength", "\[LeftDoubleBracket]", "start", 
                    "\[RightDoubleBracket]"}], "]"}], ",", " ", 
                  "\"\<nm\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<stop\>\"", ",", 
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "stop", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "intensity", "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    ",", "1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{
                   "wavelength", "\[LeftDoubleBracket]", "stop", 
                    "\[RightDoubleBracket]"}], "]"}], ",", "\"\<nm\>\""}], 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<marker\>\"", ",", " ", 
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "marker", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "intensity", "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    ",", "1"}], "}"}]}], "]"}], ",", " ", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{
                   "wavelength", "\[LeftDoubleBracket]", "marker", 
                    "\[RightDoubleBracket]"}], "]"}], ",", " ", 
                  "\"\<nm\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<range\>\"", ",", 
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "range", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "1"}], "}"}]}], "]"}], 
                  ",", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"scale", "[", "range", "]"}], "]"}]}], "}"}]}], 
               "}"}], "]"}], ",", "\"\<    \>\"", ",", 
             RowBox[{"SetterBar", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", "func", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Max", ",", "Mean", ",", "SW"}], "}"}]}], "]"}]}], 
            "}"}], "}"}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"LocatorPane", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", 
              RowBox[{"{", "p1", "}"}], "]"}], ",", 
             RowBox[{"apl", "=", 
              RowBox[{"ArrayPlot", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"func", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"start", ",", "stop"}], "}"}]}], "]"}], "]"}], 
                   "&"}], ",", 
                  RowBox[{"Reverse", "[", "intensity", "]"}], ",", 
                  RowBox[{"{", "2", "}"}]}], "]"}], ",", 
                RowBox[{"PlotRange", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"All", ",", 
                   RowBox[{"scale", "[", "range", "]"}]}], "}"}]}], ",", " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}], ",", 
                RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"\"\<Coordinates: \>\"", "<>", 
                   RowBox[{"ToString", "[", " ", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"p1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "+", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], 
                  "]"}]}], ",", 
                RowBox[{"FrameTicks", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"yticks", ",", "xticks"}], "}"}]}]}], "]"}]}]}], 
            "]"}], "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Grid", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"lp1", " ", "=", " ", 
                RowBox[{"ListPlot", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{"wavelength", ",", 
                    RowBox[{"intensity", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}]}], 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
                  RowBox[{"AxesOrigin", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "wavelength", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "1"}], ",", "0"}], 
                    "}"}]}], " ", ",", " ", 
                  RowBox[{"GridLines", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "wavelength", "\[LeftDoubleBracket]", "start", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "wavelength", "\[LeftDoubleBracket]", "stop", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "wavelength", "\[LeftDoubleBracket]", "marker", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], ",", 
                  RowBox[{"AxesStyle", "\[Rule]", " ", "20"}], ",", 
                  RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", 
                  RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
                  RowBox[{"ImageSize", " ", "\[Rule]", " ", "Large"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"N", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}]}], "}"}], 
                "]"}], "}"}]}], "}"}], "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Save Spectrum as PNG\>\"", ",", " ", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"\"\<spec-x\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "1"}],
                  "}"}], "]"}], "]"}], "<>", "\"\<-y\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "2"}],
                  "}"}], "]"}], "]"}], "<>", "\"\<.png\>\""}], ",", " ", 
             "lp1", ",", " ", "\"\<PNG\>\""}], "]"}]}], "]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Save Spectrum as txt-file\>\"", ",", " ", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"\"\<spec-x\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "1"}],
                  "}"}], "]"}], "]"}], "<>", "\"\<-y\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "2"}],
                  "}"}], "]"}], "]"}], "<>", "\"\<.txt\>\""}], ",", " ", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"wavelength", ",", 
                RowBox[{"intensity", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}]}], 
                 "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", " ", 
             "\"\<Table\>\""}], "]"}]}], "]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Save Map as PNG\>\"", ",", " ", 
           RowBox[{"Export", "[", 
            RowBox[{"\"\<map.png\>\"", ",", "apl", ",", "\"\<PNG\>\""}], 
            "]"}]}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Save Map as txt-file\>\"", ",", " ", 
           RowBox[{"Export", "[", 
            RowBox[{"\"\<map.txt\>\"", ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"func", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"start", ",", "stop"}], "}"}]}], "]"}], "]"}], 
                "&"}], ",", 
               RowBox[{"Reverse", "[", "intensity", "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", "\"\<Table\>\""}], 
            "]"}]}], "]"}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7016737667367554`*^9, 3.7016737861891737`*^9}, 
   3.701674469874953*^9, {3.701674509355774*^9, 3.701674510677735*^9}, 
   3.7016746113847456`*^9, {3.7016746697350416`*^9, 3.7016746878905134`*^9}, {
   3.701674759762417*^9, 3.7016748343782177`*^9}, {3.701674869443185*^9, 
   3.70167488494272*^9}, {3.7016750136329346`*^9, 3.7016750147029023`*^9}, 
   3.7016750818449106`*^9, {3.7016751133839645`*^9, 3.701675176560118*^9}, {
   3.7016752066752386`*^9, 3.701675226132661*^9}, {3.7016951656588244`*^9, 
   3.701695166718793*^9}, {3.7016973733004503`*^9, 3.701697374500414*^9}, {
   3.7016992179916525`*^9, 3.70169922705138*^9}, {3.702712871639537*^9, 
   3.7027128782694097`*^9}, {3.7029784080921745`*^9, 3.702978434065675*^9}, {
   3.7029793655705614`*^9, 3.7029793867081547`*^9}, {3.702981280918327*^9, 
   3.70298128439706*^9}, {3.7029868871218543`*^9, 3.702986892191757*^9}, {
   3.7029870922891088`*^9, 3.702987109667175*^9}, {3.703015181969611*^9, 
   3.7030151834402113`*^9}, {3.7030152216012473`*^9, 3.703015232845315*^9}, {
   3.7030492393356905`*^9, 3.7030492905892763`*^9}, {3.7031629091763725`*^9, 
   3.7031629147862606`*^9}, {3.7031630689851995`*^9, 
   3.7031631033965163`*^9}, {3.703169956561286*^9, 3.7031699590432367`*^9}, {
   3.703171208073081*^9, 3.7031712138489676`*^9}, {3.703171246826319*^9, 
   3.7031713875055385`*^9}, {3.703171448902328*^9, 3.7031714559421873`*^9}, {
   3.703171560234128*^9, 3.7031715613261065`*^9}, {3.703171597553388*^9, 
   3.703171604713245*^9}, 3.7031718118551683`*^9, {3.703171856324301*^9, 
   3.703171860464218*^9}, {3.707126717564014*^9, 3.707126772542511*^9}, {
   3.707211163351782*^9, 3.707211188436582*^9}, {3.707211267934182*^9, 
   3.707211282442182*^9}, 3.707211434777182*^9, {3.7072115456463823`*^9, 
   3.707211570372382*^9}, {3.7072116379337234`*^9, 3.707211669865082*^9}, {
   3.7092800017014227`*^9, 3.7092800700918226`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`p1$$ = {43.800000000000004`, 
  23.200000000000003`}, $CellContext`start$$ = 430, $CellContext`stop$$ = 
  692, $CellContext`marker$$ = 2, $CellContext`min$$ = 0, $CellContext`max$$ =
   5000, $CellContext`range$$ = 2950, $CellContext`scalefactor$$ = 0.003}, 
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          TagBox[GridBox[{
             {"\<\"start\"\>", 
              SliderBox[Dynamic[$CellContext`start$$], {2, 1340, 1}], 
              DynamicBox[ToBoxes[
                Part[$CellContext`wavelength, $CellContext`start$$], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}], "\<\"nm\"\>"},
             {"\<\"stop\"\>", 
              SliderBox[Dynamic[$CellContext`stop$$], {2, 1340, 1}], 
              DynamicBox[ToBoxes[
                Part[$CellContext`wavelength, $CellContext`stop$$], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}], "\<\"nm\"\>"},
             {"\<\"marker\"\>", 
              SliderBox[Dynamic[$CellContext`marker$$], {2, 1340, 1}], 
              DynamicBox[ToBoxes[
                Part[$CellContext`wavelength, $CellContext`marker$$], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}], "\<\"nm\"\>"},
             {"\<\"range\"\>", 
              SliderBox[Dynamic[$CellContext`range$$], {0, 5000, 1}], 
              DynamicBox[ToBoxes[
                $CellContext`scale[$CellContext`range$$], StandardForm],
               ImageSizeCache->{49., {0., 8.}}], ""}
            },
            AutoDelete->False,
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"], "\<\"    \"\>", 
          InterpretationBox[
           StyleBox[GridBox[{
              {
               SetterBox[Dynamic[$CellContext`func], {Max}, "Max"], 
               SetterBox[Dynamic[$CellContext`func], {Mean}, "Mean"], 
               SetterBox[Dynamic[$CellContext`func], {$CellContext`SW}, "SW"]}
             },
             BaselinePosition->{1, 1},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            Deployed->True],
           SetterBar[
            Dynamic[$CellContext`func], {Max, Mean, $CellContext`SW}]]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], ""},
     {
      DynamicBox[ToBoxes[
        LocatorPane[
         Dynamic[{$CellContext`p1$$}], $CellContext`apl = ArrayPlot[
           Map[$CellContext`func[
             Take[#, {$CellContext`start$$, $CellContext`stop$$}]]& , 
            Reverse[$CellContext`intensity], {2}], PlotRange -> {All, 
             $CellContext`scale[$CellContext`range$$]}, ImageSize -> Medium, 
           ColorFunction -> "Rainbow", PlotLabel -> Dynamic[
             StringJoin["Coordinates: ", 
              ToString[
               Round[{
                  Part[$CellContext`p1$$, 2], 
                  Part[$CellContext`p1$$, 1]} + {0.5, 0.5}]]]], 
           FrameTicks -> {$CellContext`yticks, $CellContext`xticks}]], 
        StandardForm],
       ImageSizeCache->{366., {194., 202.}}], 
      DynamicBox[ToBoxes[
        Grid[{{$CellContext`lp1 = ListPlot[
             Transpose[{$CellContext`wavelength, 
               Part[$CellContext`intensity, 
                Round[Part[$CellContext`p1$$, 2] + 0.5], 
                Round[Part[$CellContext`p1$$, 1] + 0.5]]}], 
             AxesOrigin -> {Part[$CellContext`wavelength, 1] - 1, 0}, 
             GridLines -> {{
                Part[$CellContext`wavelength, $CellContext`start$$], 
                Part[$CellContext`wavelength, $CellContext`stop$$], 
                Part[$CellContext`wavelength, $CellContext`marker$$]}, {}}, 
             AxesStyle -> 20, Joined -> True, PlotRange -> All, ImageSize -> 
             Large]}, {
           N[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5]}]}}], StandardForm],
       ImageSizeCache->{576., {179., 186.}}]},
     {
      ButtonBox["\<\"Save Spectrum as PNG\"\>",
       Appearance->Automatic,
       ButtonFunction:>Export[
         StringJoin["spec-x", 
          IntegerString[
           Round[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5], 1}]], "-y", 
          IntegerString[
           Round[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5], 2}]], 
          ".png"], $CellContext`lp1, "PNG"],
       Evaluator->Automatic,
       Method->"Preemptive"], ""},
     {
      ButtonBox["\<\"Save Spectrum as txt-file\"\>",
       Appearance->Automatic,
       ButtonFunction:>Export[
         StringJoin["spec-x", 
          IntegerString[
           Round[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5], 1}]], "-y", 
          IntegerString[
           Round[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5], 2}]], ".txt"], 
         Transpose[{$CellContext`wavelength, 
           Part[$CellContext`intensity, 
            Round[Part[$CellContext`p1$$, 2] + 0.5], 
            Round[Part[$CellContext`p1$$, 1] + 0.5]]}], "Table"],
       Evaluator->Automatic,
       Method->"Preemptive"], ""},
     {
      ButtonBox["\<\"Save Map as PNG\"\>",
       Appearance->Automatic,
       ButtonFunction:>Export["map.png", $CellContext`apl, "PNG"],
       Evaluator->Automatic,
       Method->"Preemptive"], ""},
     {
      ButtonBox["\<\"Save Map as txt-file\"\>",
       Appearance->Automatic,
       ButtonFunction:>Export["map.txt", 
         Map[$CellContext`func[
           Take[#, {$CellContext`start$$, $CellContext`stop$$}]]& , 
          Reverse[$CellContext`intensity], {2}], "Table"],
       Evaluator->Automatic,
       Method->"Preemptive"], ""}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.7092800560206223`*^9, 3.7092800750994225`*^9}, 
   3.709280239882222*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"+", " "}]], "Input",
 CellChangeTimes->{3.7092838852830224`*^9, 3.7092857710682163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["--energyskala und fitfunktionen--", "Subsection",
 CellChangeTimes->{{3.707392809528246*^9, 3.707392819127246*^9}, {
   3.7073928882432456`*^9, 3.7073929167542458`*^9}, 3.7073931205262456`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"energy", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Dimensions", "[", "wave", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energy", "=", 
   RowBox[{"1239.84", "/", "wave"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dimensions", "[", "energy", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaus1", "[", 
    RowBox[{"A_", ",", " ", "x0_", ",", "w_", ",", "c_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"A", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "0.5"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "/", 
         RowBox[{"w", "^", "2"}]}], ")"}]}], "]"}]}], "+", "c"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Totalgaus", "[", 
    RowBox[{
    "a1_", ",", "a2_", ",", "x01_", ",", "x02_", ",", "w1_", ",", "w2_", ",", 
     "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"gaus1", "[", 
     RowBox[{"a1", ",", "x01", ",", "w1", ",", "0", ",", "x"}], "]"}], "+", 
    RowBox[{"gaus1", "[", 
     RowBox[{"a2", ",", "x02", ",", "w2", ",", "0", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dreiergau\[SZ]", "[", 
    RowBox[{
    "a1_", ",", "a2_", ",", "a3_", ",", "x01_", ",", "x02_", ",", "x03_", ",",
      "w1_", ",", "w2_", ",", "w3_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"gaus1", "[", 
     RowBox[{"a1", ",", "x01", ",", "w1", ",", "0", ",", "x"}], "]"}], "+", 
    RowBox[{"gaus1", "[", 
     RowBox[{"a2", ",", "x02", ",", "w2", ",", "0", ",", "x"}], "]"}], "+", 
    RowBox[{"gaus1", "[", 
     RowBox[{"a3", ",", "x03", ",", "w3", ",", "0", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maparray", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Dimensions", "[", "destarray", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "destarray", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7073928771822453`*^9, 3.7073928867252455`*^9}, {
  3.7073929691232457`*^9, 3.7073929741762457`*^9}, {3.7073930335762453`*^9, 
  3.7073930435582457`*^9}, {3.7073931703432455`*^9, 3.707393171653246*^9}, {
  3.7073933366762457`*^9, 3.7073933369742455`*^9}}],

Cell[BoxData[
 RowBox[{"{", "1340", "}"}]], "Output",
 CellChangeTimes->{3.7073929774002457`*^9, 3.707393182219246*^9, 
  3.7073952655622406`*^9, 3.707470778683131*^9, 3.7074733857091312`*^9, 
  3.7074786196899195`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single-pixel-fit", "Subsection",
 CellChangeTimes->{{3.7073931459732456`*^9, 3.707393156476246*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DEFINIERE", " ", "SINGLE_PIXEL"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"picx", ",", "picy"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"35", ",", "34"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"destdata", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"energy", ",", 
        RowBox[{"destarray", "[", 
         RowBox[{"[", 
          RowBox[{"picx", ",", "picy", ",", 
           RowBox[{";;", "1340"}]}], "]"}], "]"}]}], "}"}], "]"}]}], " ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"destarray", "[", 
        RowBox[{"[", 
         RowBox[{"picx", ",", "picy", ",", 
          RowBox[{";;", "1340"}]}], "]"}], "]"}], "]"}], ">", "100"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"harterfit", "=", 
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"destdata", ",", 
         RowBox[{"{", 
          RowBox[{"Dreiergau\[SZ]", "[", 
           RowBox[{
           "a1", ",", "a2", ",", "a3", ",", "x01", ",", "x02", ",", "x03", 
            ",", "w1", ",", "w2", ",", "w3", ",", "x"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a1", ",", "62"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a2", ",", "76"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a3", ",", "36"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x01", ",", "1.65"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x02", ",", "1.62"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x03", ",", "1.56"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w1", ",", "0.013"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w2", ",", "0.037"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w3", ",", "0.066"}], "}"}]}], "}"}], ",", "x"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"harterfit", "[", "\"\<BestFitParameters\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ga1", ",", "ga2", ",", "ga3", ",", "gx1", ",", "gx2", ",", "gx3", 
         ",", "gw1", ",", "gw2", ",", "gw3"}], "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "a1", ",", "a2", ",", "a3", ",", "x01", ",", "x02", ",", "x03", ",", 
          "w1", ",", "w2", ",", "w3"}], "}"}], "/.", 
        RowBox[{"harterfit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", "destdata", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"harterfit", "[", "x", "]"}], ",", 
            RowBox[{"gaus1", "[", 
             RowBox[{"ga1", ",", "gx1", ",", "gw1", ",", "0", ",", "x"}], 
             "]"}], ",", 
            RowBox[{"gaus1", "[", 
             RowBox[{"ga2", ",", "gx2", ",", "gw2", ",", "0", ",", "x"}], 
             "]"}], ",", 
            RowBox[{"gaus1", "[", 
             RowBox[{"ga3", ",", "gx3", ",", "gw3", ",", "0", ",", "x"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Min", "[", "energy", "]"}], ",", 
            RowBox[{"Max", "[", "energy", "]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Blue", ",", 
               RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", " ", 
               RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Orange", ",", " ", 
               RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Green", ",", 
               RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}]}], "}"}]}], 
          ",", " ", 
          RowBox[{"Filling", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", "None"}], ",", 
             RowBox[{"2", "\[Rule]", "Axis"}], ",", 
             RowBox[{"3", "\[Rule]", "Axis"}], ",", 
             RowBox[{"4", "\[Rule]", "Axis"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", ",",
      "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", "destdata", "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], " ", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"parameterarray", "=", 
    RowBox[{"harterfit", "[", "\"\<ParameterTable\>\"", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"intval1", ",", "intval2", ",", "intval3"}], "}"}], "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gaus1", "[", 
         RowBox[{"ga1", ",", "gx1", ",", "gw1", ",", "0", ",", "x"}], "]"}], 
        ",", 
        RowBox[{"gaus1", "[", 
         RowBox[{"ga2", ",", "gx2", ",", "gw2", ",", "0", ",", "x"}], "]"}], 
        ",", 
        RowBox[{"gaus1", "[", 
         RowBox[{"ga3", ",", "gx3", ",", "gw3", ",", "0", ",", "x"}], "]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Min", "[", "energy", "]"}], ",", 
        RowBox[{"Max", "[", "energy", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fwhm1", ",", "fwhm2", ",", "fwhm3"}], "}"}], "=", 
    RowBox[{"Abs", "[", 
     RowBox[{"2", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", 
        RowBox[{"Log", "[", "2", "]"}]}], "]"}], "*", 
      RowBox[{"{", 
       RowBox[{"gw1", ",", "gw2", ",", "gw3"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7073929367652454`*^9, 3.7073929632302456`*^9}, {
   3.7073931757792454`*^9, 3.7073931772602453`*^9}, 3.707394588707015*^9, {
   3.707479171207409*^9, 3.707479246056209*^9}, {3.707479293324209*^9, 
   3.707479357424609*^9}, {3.7074793974854093`*^9, 3.7074794011982093`*^9}, {
   3.707479449168209*^9, 3.707479458996209*^9}, {3.7074795204914093`*^9, 
   3.707479561067009*^9}, 3.7074796194578094`*^9, {3.7074800507354093`*^9, 
   3.707480067645809*^9}, {3.7074801657526093`*^9, 3.7074801862822094`*^9}, 
   3.707480219775409*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxNenc81+/3vkgyikg0yKqIjIwk4yAze++9d0SlolIqkRFJKSqjTVYkVIpU
SiSUjBIRIXvV7/35fZ+3k396XI/rOte5zrnv5/NF8LsEmrjT0tDQKNLT0Pzv
X40kid8GV+dVLqX976us6rnEjvJf6Yj9Z1/nnLu8iFUYFtKKxS8h3vl1oPft
RcQ1yT67AlPnVTw9/vfVqzL8jqOQ9cK8ioz0/76aVI7sk9TPT0ZcGlzOaHx+
XoXm/391qRwJdeofTUScfN77Z1IC+o9aHmeTiUe8/ES2VXMc+iW48VSHxWL+
z8M9htxnkRfZm/u37AzWs9x3bLQ9jXhOwap2IRr7q7PHdmScRL8LKjncaieQ
vxF7LbTnOM4b1PxyPPoY8lrcXBdEjiIO+NVr8yYCcValoGrgEcQOHMK67Icx
r9fjX6HF4ZjvI011tdVBxG32hjLz+7GeT7mzJiMMea2/Gw6rh6LfGQkz074Q
nOcPi4T+2WDkHXRmvCT2Yr06nX1uUyDiDtYchgMBqNcPiIjZ4I+8NNd2iae+
yCsN+Ey6+yDvTxfayeSNmE1wdiDPE/OHn9bkNvdA/vIHOq9ZN8wb+EPsU4Yr
4thXjv4aLqgfbr0u+NMJ+78SS55LcET8q118Qs4B+7mLbVj1xQ79hGktDaNs
kV+rKJYnYoP1P8YvSDZYIS8jBR/CLLH+52eBSzwWiPnXxh57bob5nBn2x/ia
4n2Z94stZjdBfad8Le0jI/Rf17xvr7Mh1nu1KdEyGmCeN42BRfl6iFO/05+2
2oP6ofCbR2h00S/zlEnKTW3kj3QYvzXSwv7SjwxEZjTQz50tNfvabsQN843q
uur/3IdUI7oxVeTdOh72XAbkzzJb9u1WQV53oZn5lxLyh1ZFGacqIlZhWFYG
uzDvGsd7qgM7kbco4xs8L488T9n9h0o7kJ/u/JPVJ7vYrypjzLEwUeaf/Voc
/LZLGuvXs2rK9koh/sTJeTNBEv10b3Tv2iXxz/uk3WT0+zacp3L4YW2CGPar
+vqwapco8ixP9dt6RRCH/nzJkSSM/rUZQoFKW9A/I5dh8Mcm1NOy+8ckC6G/
34ksHRDEvE5wS2SQH/mQRn7Ri3xYf0Cf0WD3RvQPupyXOMKD/ZXWl0+mb8B6
trZDh3XWo352/ZDA5Fr028lZPHCdG3m7L2+bDLmQ//g85ss8J2L7d+eW316N
+vBAUTNLDuTPxSx7upQd84gVBxkUsKHeu4R1wZH1n/ffbpk3K1bi86PDeOJx
OQv67W43rPdm/ud501b6y8WE/CrtK8Y1yxE/1uJ8sY8B+91znbQSXIb1mwe+
r2hcivrWJZ3fjtLh/pX4z7RJ0KL+xNYvIx00yM9mHxc+93dusb53aN9RpT9z
i/odk1Yzg/PIO7gcTUqfW+SrYHmCnt7s3KIf3ZqoLfPTWH/R+Y7A3Snk7+gu
VbabRD8Z3+3hLBNzKvVv/vc1qEI/IdnyeAzrNZeYmPn/RrxrLGGUZxT7/xVO
yns7PLe4b95Wo3ORv9D/ud3GOMkhxJo/rt3t/ol5tKa3DiYNIA6cKN6zux/7
uUbGv5noQzz1t9Qvtxf7fV4euc36O9YPfmxfydyDeG7PJraKr9gfBOalArsx
f6tdUQh/F+p1Lo42N3UgnpxeZhX9Bfs/XkidlW9HXn5w6vHPT7i/nE2vMq62
Id/E5nLduBWxy6jLi6UtmEd25cvlpc1Yn2qk5Ov7AfVLlIt/8TahXvj958TG
96iPiLprFt2Aenp4tUPhHeJfo6cVftUjrvU4a3/9DeJbg28yLV7/M3/mNTrm
V7gfExr66KqX2C84I014Xy3q7d7Z/BSuwfNI/5Ve/+U5YstI23dJ1Yij2uRH
tZ4R/1EVFxNJ6YUn/9zHmAvJBVXon7rMk9OrEut7etRLeCqQHzoivL+pHOsj
Cr0tzzzCvNz7b1mqlCGv+lpx/8RDrIcTL0rulKBe98VFTpdigsdVWtcVnOcu
wrw52tbb3xUgprdPHT75AOvNmWzqFfOxflvF7bqx+4jF68N6b9/Del76l/wu
d7F+1PnskbV3SN45laMsr6cabiEvnhuSdPom7qO+NH4P5KJe6wzzpulsnE83
MJUnP4vgaRVvWglZrxvY31U8xI/vOuLIdY+etWYS/z8qCSlZ8okZyF9nEX+r
cxX9IlruHqe9gvq6pA0W5ZeRT2ri0dl3CfFyAQbbbWmIPSYPxPamknpaGHgW
8CXjAvK8oKJvnYLz5bH2fmZPxn5qQXQxb5IQn2lJsoxORL298k91SEB+T+ld
w9lziLUdxMOL4lBP1+JbHRCL+A8TvZjIWczDGjpR+O0M5tUMSLa5ehp50aJj
fNanyL7oobZqNf3qaNQzbx9a/u4E4skbLqIxUZinO221v8ZxrC99Y1NPcwx5
nawPeo8jST4GcJppG9gfgbwWF9NN6SPof2PycdTwIZJvKajWJEbcCcf61Ktd
qZ4HkZ9L1G4QPEAwO9xs5d/SFYb6s17MV9JD0T8tzV7Keh/BTGCp8bCHMwT5
mkmOh417sd5V9k1ufBDh2eDzo88leoGEZwUa4e4exgBy35fDM2lZqVo/rL/r
EpZ+wpfsZwVU7s7crOaD/U2fML/76zWn8v/l0qtg5HxRSoUn8WOHVOadhw55
4HxZj5Ijd7qj/kAN3/UpV8StI61fi10wr72+rdo+Z+RLgm882e6EvOgLJvtR
B+K/BnjEJbjz7Qm/GhSkfEYD7Ai/DrhSHv7YZov4GZvl30FroucGPysH6btW
ZH5O+Ma5ItrXEvnwXoeprRaIP9y5Fz1gRvRrYWXnBZnbpmRfHMB0bB+NjwnB
G6Hv17cBEWOC18MzbZWxfkOCuaDqneC62wbEfwOIVf908NEn+1wHStoyz7bq
kX484Fphqf5TF/0GRce+3tEh8/GClALtNT9twvOBsq3y4W1aWB/4IDrslwbZ
rwAIPkk+l7eb9OOFdfZuz4PUkedQTuLerkbyCUKl0sGYMUB+1WTxumIVwm+C
fo7ddWHKpJ8QeGZGpMgrEX9BoAlzjpzdRfIJgdTU6VOPFdCf7cPIvYidWB9j
Oj4K8mS+LaBgGm9Kt4PUb4adf+ybXsiS+i3QymC397QM6ScCeeM9YnukSb0I
hGaP06/cTvy3gjNf7UKDJMGbobtnP3uyBOpFB9U0LMUJFgWHX4IX1m0jejEw
fBO2tEOU9NsGIzItCde2UvnWSsKTLdcU3EWQl5APohURJnklwOlEZt/gZsJL
QP34toH8TRTWk4Yb+0yZQ4VQH6oirrNTkPBScCz1YvYCP8X3SsE3tnzeZ3zU
+RRuh/CLBiXRG6m8hTLgaSrlu4eXYFk4LWGmxMaD/bbsMNnWvB7r1/OfVri0
jvCyYN6e4O64ltrHURlYo1x3T4gbefp1bzgG1hD/HWC+IyU1jxNxedPXHaGr
Sd4dkLM9blKBg2B5KL9m0kjDTva3Ew6vkXhdw0awAtSyV3THspL+ihDtMs1p
upL0V4JoV2XPtStQb7TybHMnM+mvCC73DzjnMBG9AtSx0zH7M5L+ylDdfOq9
9HIKbwbo/E1bPLuM6gcADpErS57SU/UsAK76OR9OL6VwLMBJaWE2IzpqfyFq
4MYr7s1FS/TqkE+7prODhvLPUYXIrs97c/7OUvXqsEnloUDAn9n/qx9Thet3
Xg3LLsxSedThXKb+p4W5WSrPblCd3PX1xSzBGhA9N7bs3Azlx6IBDFKsOhbT
s/+3jzYNOEM3mMs7Nft/+wjRhOpWQaG+CaLXgqBdnBV545TeWgscw6xDDowR
f02Q3m6oqfqbYC1ouRovxzRK6nWg+fhB9aZhyn9MB5TGsv3Tf5H8utDSwFbs
PkTy6EA232FuiUGKz9EF2UeP0qYHyD70QaLg3I5n/aReH16vGR89+4Po9eHR
3ag68z7k8x+kV2zsJf6GcO1dy9v+HjKPIfgOSS4UfiN5DcEglEE74itVr2kE
Pw9a5ml3U7yYMTQHlklzdFF8jTEMgUjzlw7Kb6cJVCUtO3/zC6W/awIfw/X9
Q9pJvQkck7/gpvyZql9mCjml7QcYP1H1B01h/PPRWx9aqX01mUJb2bqpjBaS
xxRijJicfT9SONoMpsv29Mk1U/vPNIOy72ExtB+ofoNmIPnilO7bRqI3h9jE
js2X3lP6LnPIYufg82ggeSyBNeOk7PZ3ZD5L2NZT7/mnnugt4a+5XsmrN5S/
nyX4nrrIn/qa9LeCJkaOW66vyPzWUGBuqi9ZR/xtoHLtoxULtZTeyRrYijoG
6mrIvNaQNcLfc+EF6W8LuzjWz7o+p3hTW1hDLyomVU3tq8wW0od/hP95SvLY
wp624u+vn5C8dqD4Xtg/rYrU2wPv3HU2z0oKc9jD8z3lDTIVlJ7PHnKf+d+j
fUz25wAqeetzGh6ReRyBXvHpo6tlpL8D6IpM/PQrpfJaOIHYb+6dux5SfpJO
UKNYfZ2xhKqfd4K/LCPCrUUUz+YM8YxLXucUUvUfnUDS+ffp0ALK/5Yz5J+0
cd39gKp/7ASdR2RtOPKp90G1M+zf+t3v630Kq7vAuo9/Lz+4R/k3OMOhiL7e
o3cpXtAFEi0u6hvdofzrXKDj2M2GjbcpfztXSGReHTR8k+K9XWGbqJJoVS6V
L8wVRL6U0cbnEH9X+BE6OOGQjfruFh96iSyidwPdfamSf69T+iA3KI0K2P/u
GtXvsBv0q2/8nJFJ/NyAR6XNOiiDOp8bbvBwhfsEXKX8LriBe9zvO6uuUHoj
d5in1438epnsyx2O37zsX3iJ8t/gAcZ+eQdOpJF9e0Bec/FV84vkvDzg4tmw
7s2pVD9XDxjxK1eZTkF+puxoWV0yqfeE7xm2hpfPU/36PaDdKo/GP4mcjyfo
TLO9VU6k/NQ9offDtxK2BDKfJ9j/eFz+9RzFR3mCjcHF9qI4ktcLAk63cZ+K
JffFE6zbDwdZn6X6MXqBKRtXj2gMuS9e0K2WFfLnNMXreMEp8dO8708RP2+o
W1/VcyOa7M8LTl75UhN2ksqT4A2rmjuf65wg+/aGd8UiHRuiyD69YSbmIfvI
MeRli3hcq48ivm1u9e5CJNmfDwRcfm3hE0FhOh+or2SeVTpC5Wn3gW3Lj5Su
Okz1z/cBg9TCpO/hlF7QFzobOE6XHST78oU4+ksX4w6QffjA1Me9L5z3U/pq
X9gf1sAiF0bhb76QfrA7kCmU0iv6QQLztV8dIWR+X7j9PeR0YTDZly/UPB1S
Or2XPK9+4BYastI+iOT3h5nMi7NSgeS8/EBI7tkShgBKP+IHU+VRQu1+xN8P
Drm0uTzwJf39IUIysTzah+zLHwwr/STtvKn+Iv4QzK/wRMqL+PlDUdGED4Mn
1gsWbpf64k7m9YcLERbshW7k+fWDNvnxlWdcqf4l/rCfa/kWRxdyP/1BIWfK
WtaZnI8/DKhX5TI7kecxAFo7R9m+OpD7GwD3JSaSS+1J3gCIYbSTibcj9QHA
misw7G5L6dMDoKrv/nNFG6r/mgAYP3S+mMOanEcA0DvKPR2wRD/6ifN9Ty3I
+QZA+ktlkTRzcr8DIZpLOjrIjNyPQMhb3bKgZUrOPwB4NlUkbDQh+wmA8NQ9
ylNGVP+VQfCmKWLZO0PyfARA1Nr+/hwDcr8Cwfd29I8IfbLPQLjIUrnEUo/s
MxBGrPnlJPaQ+x8AkjJcJxl0yf0IAM10qeFObZznjGFLSKkWeT8EwoTsJY5E
TXK/AmC/cHe9twZ53gKBd1Lphtpucv6B4HWe6/x6dfK+DIT9JX+vjKuS+kCw
CLSvrgey70DQtH1Gl6uC+/3wfKvjUWWqXi4Q9L4vfLBWIucRCG8k5N2lFXGf
X1l92VbsIvcjABh+LDT37iT3OxCmmY6XPJFHvLt27MGlHYi/9Wyq3SeH+yva
1DRlIEve5//5Ob1VE5HB+7GRZfVNOmnyPAVC6HZZ4Q4p8j4IgPhN4tWlkqhn
q/Y4cF6C9AuAtyc/awWI4/0LzXywXWcb1tubC+8QEsP7ceq1m8XfreR++UOQ
tWvCJxE8zyPisT3FwuTzLgAs6z6bJG7B82N5Edbutxn7cxhfidTehPtumg9R
EhIi8wfAY4EpThpB8vz/9/yoxy9v58fzD857w1nKR+5fANDRcislbySfL4Fw
LXhJZBAvpT8TAM6lo5/0ePD+0vw+YCyygcKTAXB19G83/Xp8HxyrWBP3dS15
nv3hjdpmkypu8vkY8N/9qZRK5yL3LwBgj7bowTXkPAJg+I6pigUn7mPPeLu/
9GrSzx/6+R8Vs3GQ5zMAPK2ucf9ahe+rvTe8Ul6zkf36w9g5FrFbrGRef5DO
3fAleiV5vvxhwZH2ptsKcl7+oL1NP06NheTzB6H9M7F8zMhntAXl/GEk+/ED
x568tvblZD5/qPmksaWcgZy3H+zbIhGftozsxw9Y0pvZDtCT96Mf5L2SvWux
lNxXf9Co6XCWpSP79oO5uTdSq2nJ+9AP+oN91o/R4H4frNXc2Ph3ZrE/F/sr
xQd/Zqjz9oPx0d8hCQsUFvGD8w+7XwTOU9jbH7bKt0sazlH41n+8B12J+CzW
cxSbmq+cmaHumx+Yp+xY+WtqZvHzJjhFqbt+coa6/75wR7Wh/t7EzOL89GwR
H+LGKf6wH+jmPhj3HyN5fSHUfUbc4Dfl7+oLH5mfHBcfpXg2P3DuOj+ycmRm
8fO0q7Jz//Avig/6z69Zam3DEMH/8WsnmvIHqX4b/ODq9Yc3E3/OLH6ez/aH
pgYPkPw+kJvPmGHaP0PdL18oyBN8KvODmr/fF64UX5nn7JtZ/Hxf5b7PeOo7
4X1gd6zsk9Yeqr7EB3xufdF+9G1m8fuDG1xaA5e/knofuPiAP+dIN8nz3/cf
XVqHHLtmFj//s3VKvFU7ybw+cHPf7F7BDsrfwheEv7El039BvxEj93d9n8m+
fOC+x7jgq09kHh9QEmlPuttGsDfc4vBcF9+K+uiNheV7W6i8ij5woPFxmNlH
5HvkRnR3NFP5GH3gsNcn+XUfKL2dD9Sc7VNZaERezmC1U9d7ks8bJnOH0qob
Zha/P3MUCBrKeUfuozcIrFluE/OW7MsLhi3VuvzrSV4viLY5G2n8htKf8Ybp
T4Hysq/J/fKBZR52TGtfkfP3BpFrXybmX1I43wsEpZ1mu2rJ/faC5ltB3C9q
yH3zgtkXhwxvvSD9POHrworMuOcUT+cN17oFmYKrKT9Jb2jMuxRr8Qzr+9by
iux6StXLeQGj39mOjU8o/NETKuw77y6tovTqXvCaNye5v4Ls57/5WvRS3j4m
5+sFkOmYV1hO8v+XZ8XnrxcfkfPwguOBYhIRZeT59QTho0bJrqXEzwN2izSx
6zxELEr74LZ4CaWv84QjcZa2q4uJvwdcOl0tNFtI8nnCtvtHGboKqPN4/N/P
H6ln6WoeUPnCPGB2zpj7bj65v54wkdagkZRH9usBPQtJsQfuk/PwgL7qlEGH
e+R+e4BHs6a7xl0yjweEXZaaEr2DPN/a59fYbxN/Dzi7as5t5ia5H+5gpT+i
2pU7s/jzUHPPuFxtDnmfeMDlFAGN+9nk+feAWJowv5Qscp4e4Bdqf/fwDfS3
o3Gjd7tOzs8dcpimw/ZcI/ncQflM1hLpTKwf+tOStS6D0q9xh2M6PM60V0l+
N6BduVduIJ3o3aFiulCw8TJ5XtxA61Xs1keXyH12g12K7TrX00geNzBbl3Es
5iKZxw1WLTg2BqeS++YGA2/idtleIPfLDfSZCyvUU8j7whVYHilbiSWT59kN
zqmXM3OeR78Sk02tC4lkvv/6sQ4+7k0g5+UKBTosj97FU35RriCtzNZQeo68
L12B9dL4n2txyOc8FNY8G0vuiysc876Vve8sYu5KGl6HGPJ8ucCMm2ie1hny
PLnC1MBFK6nTM//3/wF0rvBRSHPd+lPkvrpA7B+diaXR5DxdYOXy2b5fJ8j9
dwF/Af+x1ijkC2kyuaqPEz8XED5Ea3bvGDkvF9DfyXsr9Sh5fzvDCTHXNccj
yb5c4MB3m3S/CHIfXOBGQKiC5RHKL8oZXK/njageRlx+fOMTsUMzi///cZtl
Qy5XODlvZ1hRqJVLe5DkcYbc8pnKof3k/ecM7SYfhlvDKF7dGYQYJOSfh1L8
jCOEVd5Jy9tHzssZliSIc1wOIc+jE/DZFmVFB1P1gs7AJFxjELyX6p/uBPyp
H9gcgsj5OsOvNK+fOoGkvxOU9P/+IhtA9uMEDs7zP/j9qfNtcoTJqmMsK/3I
8+YEq3rGtGZ9KH8xRwh9YHi515vCg47wppmHoclrZvH/p3rN3sVUeVL10Q7Q
+mJw810Pyp/DEdb8DP580Z30c4CMocbck26UXtMBjhYxxga7Uvx5exAQEz3j
6EL87WEuMfGKnjPFmzrAs1qjVzudiJ89GJx3Z93iSPZpBy89Vf1WO1D7cLKD
4xLdXUvsST97yNezChi2pfQH7cDmwxKOLzbEzxaYeUffvbKm+J12MPFbILvU
iuhtYTsbY1KOJeW3zA4U3URTky0oXGMDL5/PFR43J9gW+hlp+4PMqDxdttDL
ny/raIp+oW/jLumbkHw24LlmBZeiMcG2sD67+M5WI2offjbwI23Gcq0h2a81
tJ5x2rDcgPIrs4End+2mJ/XIPm3A7ljo4Pc9VP9Ma5i35Jn+oEvO1xrY0z6v
f65D8tiA/T0By0JtUm8Fq/oO3r6uRfpbwVvuDs4kTVJvBRPvnl48pkHOxwqk
6QSk9+4m+7ECjdaT353UUc+9xCnPSI3cJwtQiNuRCKpkP5aQYsJ4VhLIfJaQ
vkU7nU+F3AdLEFk2+pxNmZy3BYS9j6FfokT2bQE3nNkdRneR/haQXzFb361A
8lnApW4wb9xJ9mUB9id8x5/Jk/7moHF0/53CHeQ+WEADS+vBLDlyHubQVcXh
lCJL/C1hc/8V+2gZsl9z2Ld8IXi/NJnPDO6ezMrw2k76m8GcU+I3aykyjxmI
zOio7JEkfubQLPa6QFEC8dbk00ri4mQ+cxjxW961cRvJYwbenpVpq8So9wOH
KXjfkfSlEyX7MQX1JU2mEyJkXjNoCxc16xMm/mYQO33Pt20L9jMK67r0ejPJ
bwrxg3LdFZvI+ZuCueoOlXwh8nyYgpR1R9F1QeS/nOJSTRGg8jQZg49E+PdT
/CS/CXDmj2aG85H7ZQq97IdC/DeSfZiA2fxleydeMp8JZD9/6WDKQ/Ibw5HZ
6P2aG8j7xhgKoptyd64n+U3A+bvAsNg6xHkCwfp8a4neBG5f06zm4KbymZqA
tv4VIwYusj9jcHg/MD7LSd4fxsClKJb/azXJZwQrXvQe/8pBeCMwsOby/8hO
+hmD3oftAa9Wkf0YA2jKRVeyUXyOIdSViJcUsCKuFDg2n7OS1BuB7ykFm8sr
ZhZ/f7Sy2fJdPAvV74kBGIob2J5gnln8fZKS9/U/B5iofY4ZgOyTulJ/RkrP
ZwRZY9oxLstRf948JdiSAXFLgnSw3jKqPkQfeFjTTqvSk/56cNNdt0RuKcEG
8IyzYlaUbmbx9138GaEW/LTETw9yL/W/XLOEzKcHkcFXTFhoSP49INSybGzJ
3+lFfgfP7dtTC9OUvz5UsywcGJoneA/090Q5fJubpubbAztOFtm0zU4v+tly
cQS8m5mmfl+nC4dS0i++mKb8N+vAcSZoK58ivB78DI+XKpgkvO5/Pw8czLw5
gXngwfymjHFKz6ILHhGXn6WMkf46cN7FNCz2N/HThu85lyBqFP1kfQP4w0cI
rwP8ASZr9w6j3+R9dWGvX1R+0IaU7FJ9xyHCa0NjyP0zFoPon3HvZrv+T8Lr
gLlZlqbGALUfax04spK7VrGf6DVhrdEpB5kfZB4dWPjoxSLWR/alCZO1ZQ2C
vQRrQU921N3136n5QjSg7ofkVY4eMo82eDO+zmH+RvprgsQKwxq6r8RfEwqm
pOfnush5acBY37z2eCfy5dN8dwc7yLwa8ElacPP3L6jXeB1e8qUd/a8X3rb/
+Bkxi9zW9e8+YT6a7YeHa9tIvt1QzsD96Ukr6acBaceOfi5rIfNpQMrtgrGC
j4RXB5ojmfx3m9GvpqrFI/sD8dMApYO6z642TVO//1aDwy0T0hcbyX53wwV3
u8eJ75Fn75qwOdtA5lOH0ce72U6+Q16eWbM94i2ZRx3Gbu2tPFBP5lcD3lfP
S4LfkHo1KHj49IXfa+QLotx/erwivCpw7RLe4lw3vfj7/Xo2hoO2L4m/GnzY
fKLbvJbcDzUQT0h3MqoheQByTr2c0H2B/T6yxlzTeE7mV4XAcGtXqCb+ACoL
0rt2PSP7U4WDhy6LyD0legAu5jhxqSdErwqHRY/piFWR/QOczpwJ31JJ6gGC
aAKfCVRg/c5ZFz7exyQPwDcFg+S15Zj3ol0BL+cjap61KrBBcHkVWxmlP6oC
dRzvQ1lKCVYGfsZoteUPEReE3Ny0tAT7F+x+wEtTTOFeRehv4RefL8Q8arIh
ptMFpJ8SVN7YHD/+gNqvnjJMqhZ3jeRT96dQGSTUMrWH8givBNltTjX994m/
AvRsOmDTe4/wiiCn+W3pt7ukXgHqE9e/6LxD8u4ERx3ey+23Sf1O4HD2O9V2
C/Ef48gzH28SPwVInWu51pRL8ioA59GQhoYcxA7hr1e/zcZ5F7Z9CXidRerl
QchYpPPlDcwzz3DPveY6qVeEgHVflzy/RvLtgPcbdYqeZmLe+Enbw1UZ6DfX
w2VTcZXUy0OM64J++RXivwPU0hitytJJHnkISSzZ//Ay8ZOH59kn7hVfIlgO
fk0NTRemoZ69Ptim4CLBcmBgH/c+P5X4y8Gd3woOeRewf2h8xJL7KSSfDLx9
9absbjLmeeJ65/Sd84SXhaTt8X63k9Cf4+GCx61EopeFVCa/sJsJhJeF1/6O
6bnxpJ8sLCjot+ScI1gGnoQ8Es6Jw3mEJDLis2MJlgF4PM2cfZb4SYHwe82r
WTEkjxywqi3VzDqD/rn5+XRZp7HenqH2441TOF9MU03VjWjkhbXuVd44Sfy3
Q6//ROONE9OLf18VfSl9/kYU4mopAcWs45gn1DMqMesY8d8OKSG75rOOor70
ttbh7EiyH2lg0tnCnhOBvPqJloqcIyS/NCQ+aYrIPUz8pMDEbK35zUPYT9l0
i+qtcFIvCYPjs2q3D6Lf9TpWmzsHsP51TU/03f1YX5w08fJeGJlfCkKiVfjy
QgmWhLrJZ3H5+xDLZ0+zFoRML/7920B7V25hMJU3TRxE2w6YF+8l/aVA/rgi
98Mgot8GHYdvj5QGUv09JECrVrnjUQDyor/3dz/2n178e72LqxpnKv2o/jQS
IH399ZanvphnsL7Lp9oH6y0W4qtfeGOegcCPUi+9yPySoHAor+iVJ/EXh4sO
l/XrPci+JWE2PGXunTupFwMmqcuVjW6I1e5tTW12JfVbYSjoyYlWF9JfFM4m
fzr12Znk3QaKtmGZHU6EF4FJD7a33Y6EF4WV63PYvjsQ/63A4VXs9cMe/S6w
lTf/tEP9rlEZq2FbxJ2GfCO/bTBPDuts+qQ14UUg+kKVw6wVwVvgSV+A3B9L
oheGR44nBGgtsX7H9ILgMguCN0PDTKsCkzk5LxHIPJ3ksdIM61VWCOeymyLe
uip1YY0JYo77dl7rjUn9FljiFvZjoxHJswlUIrqPCBli/0Ln9cIiBmQfm2Gd
xbW+bfqI+5tHyrfroR8H56nsHXtwvtQb3TcUdacX/94199qRh6o62K+qqLVT
Uxvns+sP5NHTIn78EDr7JNBYk+xfEF51abdYaGD/er+Tpna7Sb0QxEWN9Tir
o35rWMJZTzWiFwL1Dzaa/qoEC8A1qbdrQgD1y0T65w6ooJ+g2K2JCGWSVxAY
v8csPamE9W8PsgifVUT8/ehtp8RdBPPBnIHL/VQF4s8P27cWsF3difO9ik49
lSWP+6H7cI7jzg7kjb1Sih7IkXpe2F8k4lMqi35e4joyVTJEvwG0eYM4aqQJ
FoQ97ZcZ6reT/PzwlG4P2wcpzBtZNbPtsyTpzwfsTzY7fZVA/7kj73L6xXGe
hmVBtKPbiB8veBfTh0yLYX2lG+v0X1HML07PmMQgSurXQ0f0XmDdivNU1Dyn
4xIhfutgzatjn3mFCb8OPG2EXm7egpgvSbROfDP2N9/C0Sm3Cesv6Ngwqghh
v7jLh7W1BHE/35xnLhsKIN8jqrfUip+cNw/omo4fdeIjeC3Qm/mze28kei74
ki5XupcXee8Lr4PDeYg/N/y4LqIWtQFxnlHDptj1JP8a4OCv4ElZR/KugZUW
vluvrkW/gCs2e3K5Sf1q6Ny07Fg+F+nPAbJmvq/L1mCesgnGrdWc2E/pXGf6
m9VY37fJU+gjB/qrC1590smO9cFHlu7tX4X5xspSZcfYCGaH0EeNKxdYMe+u
voL5ZayoF3Mu/cO2Ev22D9lzrl+BmO2pIGxiwXyVbgyREszo73Q0qnEnE+IX
ESkKuxlJXk6wraooMViO8yTUh2lZM6A+g0d10HUZ7qd1S2p2AD3Jyw67QmeC
Dy5Fnsb3q9kJOuLHBj9yGnXjaf85n0O7zS8tQf5vWmlINg2536ugUu1WTv7f
qUW/44qpQ+V/pqi8rGBSOK9duzC1WM8WZVPaOI98xfOtih1ziHu9fjX1z04t
5j0TuvHoxMzU4nyZduWwZIbwLFCyTZ1zxTSpZwCzg0UL3FNYH77xzKzQJPa/
aqDGLDVB8q6At03Wkkrj6H9SsN5bZwzz8J3leWj+G/slXNHmdhlFTEv7Mi5g
hNQvhwzxNK5Dw1OL+/mcplR86hf212gt8EgeIpgJdvkGi10bxPrzrw4uu/+T
5KOH5ym6448GSL+l0CvlMFnbj/yQiRxL8w/E9fENsl/70M9SKidkuBf51gdF
L+a/Iy/264go03ecZ4j9UDZXD+7TZZW49KZv2N+Wjq15+1fMf+rX9RjoRn6w
zdHMoAvx1c6XUnad6PdlzELQp4PU/1FZqxErfOAL6j8VdatGtyPuOdkWkPwZ
Mf2pwbzrn0g9LZiwXln6oA39+z65+le14ryyPsoD9S2kflolbItMePtH1PM2
FfL+bEa/oe7nH2c+IN465nZ9+T/4ewzLca4mzK9vrBy6uRH59w+DD8u+x/4i
armpuxtIvzmVDyUONabvyP5pIPjhheWubxHvSKh1CK5Hv/01v14ee4M8u068
ZuJr7C9TntOS+Qr5n+r3DufXIb/FJ1P2yUuSZ1SFXYOOtqEW99Hfqf+1swb1
k+50H4dfYN6Hh/m//H2O/tvtL02zPkf98qL5zXzVeD4uDxS8JZ8h79lpXAVP
cZ7k7BfCxk+QF3mxIse5Cvs9KLsnF1yJeFSK5/PxCsx7sKIz6fxjUt+rkjHt
55BVjvzvaG2l4keI7X/3S9SUkfyDKu6/P8i2lCI+++eo4Y+HBI+rGH/de3im
BOsbaDdWMJXg/qyHT67aUIz5LRK3HtxWhHxyCtO4ciHiEMUrx40KEO+I8xBy
eYD+vcVf2kLyEUtp09w4mYfzbfU2iUy9j/zP2vcBt+5h3s/+E3vL76K+4Yrq
6fo7mO+HwbaCztvIS3CWDI/eQixn7ARLb2G+ko7rWWtu4v5Zt9NuEMlFvePC
oZxdOdh/gebUboNsxHpNfJNOWegnw/b2UcgNkr9LpdyO/nz0ddx/lNeeiLRr
qB/tu3L4bibyD3YOnqvKQJyyv66w8SrqU6aEBr9fwXxSpvM7ZtLxvoqGfrjA
kk7maVJpLBNk5LuM+viNgeekL6Ff4ojYFq005H8of220uYj5s9TokwJSkZ9P
Pe92/AJivSWXdC6koH5bZKTa7WT039JhZFB5Hvkdrcz+jUnISwVuzuhNxP1H
0m3umU3A+X+eOKrI+g8O9CzPFYxHv7rTepvlzyGmPyNVqheH+Txnhu2cY3Ef
nRdOrg47+899W+/VGRODuG1LSkXGGcy3LTTpftFp9I97al9QdwrzPLvuV9cR
jfy38sdjYydJfZnK+sEmScaTqNcayzvKewL7TY4r9UhHIa4/utpG5zjmrXrA
983hGPpLbHOK3HcU/Y6wWIvHRGJ9XfLRkYwI1Df/tntRfARxt7XrvdeHMR8T
07qb3Yf+0ddEFE+FY3/dhSMfV/yD2a3yGIUOov7ukTAjhQOYR9LY95bRfuQl
1UY5PcMwn1USV8qRUMSPGNo3J+9DHHy48PXtEKznSBSKehqM/PiKLP3Wvdjv
e07p1uEgxPvZW9YtC0L9Q65oHp5A9Au2VZCWCcDzHYwZtd3jj/P9PbM91cUP
600E5noO+iK/u7lKI9EH+WTjiLKb3ugXeK1C5YkXvh+G4w+1tngiz3pI7MSw
B77fGDjeqjF4IK91uo9jozvOY5UbNiXn9s/9uj08ZOCKOG230ZSHC+bZ8Hoj
R6Qznq8Di51qqhPm/+Y1fDzPEfHx0n0fax2wXt/0o2KXPdaLDa0qmbZD/J0z
T3WVHfbvLeXvErFFv5kDowlqNojnJJLMbK0RF54/u3Wf1aJfVaifMUecJfan
ifJdmWOBet5z+huqzJGP9o5UbDXD/uGP9gWOmuK+bgQWFzGZYv2LDcUsQiaI
Q6rnwpSMsX7y+/yYhRHW31MqiQoyRL5QT2FTjAHO/6m8r+2G/j/vG673mRV6
OI+azPjBlj2oP+z83H1U9x/eRsWNGbFKNuuBfZt00M/qzJtUFW3MK/3MsN5a
C+e3Tvq7ep8m8hEchoHnNBBb0im239yN/d6OGNhWq6N/zOfZwS9qiOXdXyZM
q2IeNq9iTQ5V9Cuok2EVB8SzOrsHtFUwD1u+X4urMvpdruVriVBCv0M+/T/S
FP+p3/ecpXgX6j/6p6k3KGDe9lSG2J87kb8i49u37B8cWeFqJiCP+sdxrU1K
O9C/wqvW3VoO9WtCyhhDZZFnEuB/kiCDPLfC/Om70sh77Hd0fbn9n+dVK8eo
Rwrvh9d8kCGNFNafebfOeYMk8pW3S0/IS/zzeRWo/chMHDG7gSLt3m34eSf2
kscuTgy/f2FecHh5SxS/X88rWtCs2YrfXwfERrV8FUFc5vnr4F/hf36eUs8X
3yCM3w9wtJlMyG/BfutWa78134z4ZWVcWfAmfF8N3rtXEi+E7yea2uwXdwXx
vAub+nrrBHCe2Iy96/r48bxVhOodl/LjfvpX+T3k58P6W/ta+VQ2Iv9Xmi3d
jhf3H9h7QiScB/2TrWXqUjf88z6rvBlevB7xq0RT5aZ1WC/MVcUxuhZx2CO7
uZX/YLv3JeNi3Ni/o0SZZg8X+s02RvB4r0F9aeAPvVOciH0Zlp3LXo36zU3a
3dUcyJ9y3KX5lR3vZ/4Hgwoa9n+ev/crNDeuQr2Wf3+XEhviNdZ+cXasqFe9
zKB3aCXyuxjKNlxagfs0d7n4p5QF9bX5879bmBEbP12YnmTC+nVRaWxrmDBf
VR0oyDKin018RKjZctTnX6h+FsKAfuPFKwTOL8P5j9L+SCqg/+f8/I04G5ei
/mvqw1ujdMg7W683WkWH/S/+XLZcihb9gj4OvDdagrjI3eReEA3i4NhdlxL+
Ti7m9S5bk5b/Z3LRX6ym+1bDAuJiAeE3I/OozxSyoVk1j/ycPp2m1BziG9/O
XzGenVzMV3QwdVnwDPKt9CzHkqYnF+fL7G9aUTiF+LfjhTtNk6iv6821HZ9A
vnoobwPnPzi8inZEdhyxAo32B4sxrNeobXq1/zfyZ4b0Gy+O4jwLFkyDZSPI
z04LcH0e/mf+Nymm879Qr3W98RrPf5g8X6Vn3ZeoDCEfqV0Z7DSIOGHea+LY
T9S/tGg+c2NgcvH96C+/RPJF/+Ti+0Kv60Bf7w/Ub9dVyF/+D35LVxyztW9y
8f3z/wAkYgA7
       "]]}, {}}, {}}, GraphicsComplexBox[CompressedData["
1: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
31OoPG4ZeKzRmMz35Jg4Dvoz+ClkvqdlV3akmb4Hhcz35Gr6v//VUkAh8z3d
A8mGu459p5D5nk/KpwPCbFQRme9hOPAF7LALQGS+5/NTwe083YWIzPfkr1yV
P+00hMh8T9bR355DlwWBzPc0bbuVfvf6ViDzPZmUTI/lvAchY3nMiSQKHY5L
6fQ/6rsCnzwaDYzd6FDD23bhaNkjYDYty1kKp0N68e2BcKUBiFgWdJk7iw7r
v41dT5alQ+nyU1arHtDhS7G3XLCJEM4LGUi3nlh5ShHnhUIDti7IbTfAeaFh
ByrjtIQ5zgu5rR2u+vXIFueFku+IA9XHGeeFpjTdikIJN5wXWhOeuLbVyo3a
VC9Er8ufB2XVPrGoSkecH3qxUWLs4uY9OD8UnmzWJ31tO84PvefijRka0cX5
IWph8WutanmcH8pqT3Vu/MSH80MfBY7w/435A2R+6IhVmqxxzHsg80Met7v2
7uOtxvkh+8S5/PTkizg/tE3/6NOdS/twfui66f2uqmg9nB/6Vt9jbajPhfND
o88XVJpHuhGZH/oS+irNTOw6IvNDh834o9x+eCEyP3SDa0dijfp6ROZ5yPeT
zPOMcgmJtp8ZMybzPG7HDK61v9OlkHmevLQMrQThOAqZ5xHfXW3s6P+SMohO
vnzjSkDG25SYOX8epJJIq0uKYL2fh+8oTBTsRB3K569lZxLgkVQYUZV6FvFd
utgTWcP6+31NFbKzTYgzO4OL/T0B3w6/CjZRpiEb+gPFvl+sP89fis1tVIbI
sfGU2lV0EJeodGBkOcDCJq0f3zfTQVPKp7R4LBak9Keyp6zooHfv3gpp5RL4
O1JKvRxIh099U9VRX9pB+ntsX1IiHfyezWZfrZ8E1fCguuQiOswGnP+8uoeL
Kvaj4ojlczrEOmYNbVNeR50sEzbj+0qHSkaSXbyxJs4r3b603HPIdyvOJ6Ux
LnunmjvgfFLJ7caCheuuOJ9Ulnnj6/Gt7tRlJ915t12Zh8zfJ+pi97ngvFLz
i/3Z8iqWOK+UuHejwec8hPNKfOufRg/qbcZ5JcmwXZPmZWI4r7RnZdTfF1Js
OK/0/e3Xnjj/USDzSrwXR4t7K5uBzCvdbIvXar2Sh/NKOX++f3igFI7zSlVi
tqvZ421wXsmvbPFSk7gsziuxrW54FP1hCpF5JY03q859d6lDZF6JKCg53kmN
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
LT67PsWNw353Mms2+aGjCA773aL7hfm27yVw2O9K47I5I/sUUG97Nb7uub+5
Puptv9qpTJe1GqHe1p/h7S3KaxMc6/9wZdWHBjx9WzDPYhLqb88knxjVI/49
YX+r0lxdEyhCRv3tT3YHs0cpJNTfJilFTdyONUH97ada0R1UFyPUz5Z0T6dW
dqmgfpbTvNCax/N//exa5pza9mIJ1M+uS83//KIrjPrZc5tfZcWwcOOwn72s
Vnib/R47DvvZRadNAytkBhz2s+dyjvicd6Oifjai4biZltAs6mcdtDWsZ0K+
oX72zxPj5qKg96ifrX4YPWPg34z62bVP95bOf3+B+tmt7GVX+vgKUD97yCa+
otMjBcB+dn+ylf8EdziA/exTs4M0d8ssAPvZkwb2Vm/vlAHYz46ZpNl2KzQA
2M/6WcnNBuDdAPazbq6fWo9c+whgP/spiL422mMSwH42xbBxuid3EfWzoe0/
87a4bKB+Nla6rKM7kQWH/Wzt4twx53FOHPazAfeC32Fm/DjsZ/1ufjmlFy2G
q/1ZTBs1pIE3RZwbj0RN8KNp/A0+TjSQpuPrxKJLwik0i6I7d2lgPUj0jucG
CfWunO5HisSIzwvYu46+WRhinSWh3jW7XKpq3x4S6lMt96lcvUiRQX2qFgiQ
MZATQ32q9bz7gKoJH+pTz5Zc1gGOnDjsU+/ElbJnLG3CYZ9aMReT9s3tL+pT
babZr+zVXER9KsNERMut9AnUp2rr+HL/uTWE+lQJV7IfN0sX6lMdVw1v1u14
hfpUi4el98vqn6I+deLCRYfmh5moT31da6sSvjkewD41VSstzMTnJoB96saM
4qXRGxkA9qm/HVdrD9uXANinKohQS6zzawHsU7X8SLjG2XYA+1TZRidv2+UB
YGKfvLU+iAbeva/a/vIjCe/WKfRWzaCBzGNtCdLEeSnN47Sbs5YGCrg7sz03
k3HYW34MiXBoLZpCfeVQmox3zuBb1FfmGqcu2SQ3or6Sk+VnpWH6M9RXyg+y
MuRy5qK+0iU/JuS+530A+8q6svfXXS4EA/dwfn2DWBrQlLze5cJHxm+8LEyr
KqaB56mbxlSJ68GEP2m6hh3E583vmlGrVhIOez5PJwtXbacAMCpRuC8+jQaK
F6PinxHzB/sDYd6bVTSQV5az7MBNxh0OV/9xiCSuF970XN+6lfjz0gtNeQtp
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
/38f/x8ySJTu
    "], {{{}, {}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
vsfcsfiMYp3hx5nbJG/SZYz/K8X3jX9GfjL2EvwCnIEfgUfgr3H7eAbK5cz9
FZ9Z7K34Le43T56nu4lf112Wa5orwBeUB/O/mHsBv4B343LmjsjFzR2NzzDW
En6suY3yRl0G3ar4bvJPy0/EvoOfj9Pzw/Fw/BVuF89O+RFzt+TbsffiN7vf
XHmu7gYeo7sk1zCXny8gv8L/bK4D7oB34UfMfSoXM3ck1gJd6fg9xLNN3qBL
r1sZ3125ufx47FfkeebS8cPwMPwlbhvPavlhczflv2Jvxn/gfnPkObrreLTu
olzdXD4+v/wy/5O55/HzeCd+2NwnclFzn8a/dawn8XuJZ6W8XpdOtyK+23Iz
+bHY88hzzaXlh+Kh+AvcJtYL+SFzN+RbsafjN7nfbHm27hp+TXdBftJcXj6f
PIj/0dxz+Dm8Az9k7rBcxNwn8W8da0b8nswVdB7Ir+PWmUkrL4/vvNxUrhZ7
KXmOuTR8Vucu/BB+CH8at471Si7LX5dv6prwG90/t3MvfhY3y8xV/KqZ8/IT
/N18Xvkl/gfz6eI5xLfn2/PbcVnzh+TC/OH4LsQaFb8/8wWcB/Dvc++bSSMv
i9+E/JRcNfZu8mxzqfkszp35wbFH4U/hVrFeyg/y1+Qbusb8hlj3nXvyM7mZ
Zv7Eo8yckx+PPQ9/tzyQ/9582niO8e34dvw2/KD5j+VC/KH4rsSaGL9P8/md
+8fawL1nJrW8NH4zchO5Cl9VnmUuFZ/ZuRP/SuyR+JO4ZazP8gP8Vfm6rhG/
PvYasXfjZ3AzzFzBI82clR/jc/N55AH8d+bTxPOPb8u35bfiB8wflAvyH8d3
Kdba+P3Gfti5X6wt3LtmUslL4jclN5Yr81XkmeZS8pliDedfjj0gfwK3iD2A
XIb/U76ma8ivi72Pc3d+OjfdzB94hJkzcjX+Lj633J//1nzqeD7ybfg2/BZc
xvxHcgH+YHyXYg2P33fsz537xtrErTWTUl4cvzm5kVyJryzPMJeCz+g8iBvE
PRt7ivhMna/G98/9csSeS54WazSfS/6Gbx1rUvwd8V2INTx+v/waeY3ZFLFf
1v0PtZ+LEg==
         "]]]}, {}, 
      {RGBColor[1, 0.5, 0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
l9eX15+U1dwX3P8MhzIh
         "]]]}, {}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1HfcjmUYBuDX3tmKZO+yd2SPoinaRdoRQqhky1b2Jnvvmb0Tlb3KKoWU
VFZK6bj+OH7PdZ6/+/2+532f+7nzt2zbpE3SRCKRhJqGMekSiUMZEonD7DIf
dG3BHq6lTySecd3GcPMlHjevo7K5O9/ygDyHyz4/VP6Zh+XV5DC/xOfklvvx
hXWV5G4cp7puNr/ph8gXaCyvIrv5RdZwt/wxO62rKH/EMarpZnFJP1g+TyN5
JdnML7CaXHJfdlhXQe7KUe7XzeRX/SD5HA/JK8hqfp5V5JT7sN268vKHHKGq
bga/6AfKP/GgvJws5udYyV1y7/g9rSsnf8Bhquimc1E/QP6RhvIyMpufZQV3
yr3Yal1Z+X0OUVk3jZ/1meKZsZwcup5s0ZeRu3CQSrqpXND3l8/SQF5KRvPT
LCO73IPN1pWWO3OAirrPOK+/Q36KpWTTdWeTvpTcif1U0E3hnD6D3IwlZNV1
Y6O+pPwe+yivm8xP+vRyUxaTRfcRG/T3yR3ZSzndJH7Up5OfZBGZdV1Zr79X
7sA3lNVN5Kw+rdyEhWTSfRj7W19Cbs/XlNFN4Ad9GvkJFpBR9wFr9cXld/mK
0rrxfK9PHe8M87lD9z6f68+QSvcY88ig78Ia/WpWsZIVLOc0Ka17lLmkt7Zz
7BH9KVLoHmEO6fSd4nnqi8nt2EMp3ThO6pPHO8ps0ureY4l+mPxr3Fd8L4qa
27KbkvJYTljXT/6B+vE5kpkvx28Zz4fG5lmkMXdksc9cjb0V+5dP472MsyDe
m/he8btQJM4L1y/5I56Xa9PYU7SJ/eH6XLzDsSZ+b9f7GMN3/scB1+bs5s/Y
H67NYg/H2RH70fX5OEPi+cTzda0X90fSOGtcd8VZFM859g6N4h2M9z7OCXNq
1w4s8v+uxP6Pd4xPzBfjOcRzpLD599iPscd5x7yLe82j+dbn+8pnqBt/jyRx
9jCDVHJ7FlpXSG7NF5TQjeK4PhFnDdNJqXuXBfqCcit2Ulw3kmP62zTUTSOF
rh3zdUf5jwb6qSTXt2Webi5zmM0sZnKEf6lv7Wcki+fDDN1hblFPP4Wk8d3j
jNMVkN9mB8V0Izik/4e6uskk0bWOM02XX36L7RTVDeeg/m/q6CaR0LWKM02X
T36TbRTRDeOA/ia1dRO5HfcQZ5gur/kNtlI49iX79X9RSzeB/+Ie4gzT5TG/
zhYKxTNnn/4GNXXj+TfuIc4w3T3m19hMQd1Q9uqvU0M3jltxD3GG6XKbX2UT
BXRD+EZ/jQd0Y/kn7iHOMN3d5lfYSH7dYL7W95FPUyf2D1d11eUx/B33FGea
Lpe5JRvIpxvEV/re8ilqx37iiq6aPJqbcY9xxulyml9mPXl1A9mj7yWfpFbs
r3gXdffLo/gr7jnOIt1d5hasI49uQLy7+p7yCWrGHoyzQFdVHsmNuOc4i3R3
mpuzlnt0/eNc0PeQv6OGPJffdVXkEVyPe9b9D7YVSTE=
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
      {RGBColor[0, 0, 1], Thickness[0.005], Opacity[1.], 
       LineBox[CompressedData["
1:eJwl1nf8TXUcgPHfjzIiZUtZZWRvqYyyd6jIlpXMirJnRYMiI5uMRJlp2KtS
dkR2lNkyshW9Py9/PL6f5zn3uOfe+z2HXG26N+yWmJCQMCBJQkKs//njDaTH
fN4SNR3byVvhMi+Jh7VFvAL28LchJdzkbyIDPuWtUMuBH3lrXOGlkF9bzCti
L38HSXGLD0NGfMZbo7bX7uLP4yovjQLaEv4Efubv4o6E2xcxXMuEBfR51NF2
8za4xsugoLaUP4l9fATuRKL+lpYZC3kb1NV+4m1xnT+CQtrnvBL285FIFm+v
v61lwSLeFmVRWF+mVcYB/h6Sx2fW39Huw2LeDo+iiP6FVgUH+ftIEZ9Rf1fL
iiW8PR5DUf1LrSoO8VFIGZ9JH6Hdj6W8Ax5HMf0rrRoO89G4Kz6DPlJ7AJ/z
F1AOxfWvteo4wj9AqvgM+ntaNizjHVEeJfTlWg38wscgdXwG/X0tO77gL6JC
7Cl9hVYTR/lY3B2fQR+l5cCXvBMqIk1cr2Oj9Zz4infGE7gnrs2xD/Rc+Jp3
wZO4N67DsTH6g1jOu6IS0sZ7OjZWfwgreDdURrp4T8fG6bmxkndHFaSP93Rs
vJ4Hq/hLqIoM8Z6OfajnxWr+MqohIzIhM7LgPmSN6/D6CV6bD2v4K6iO++M6
HJuoP4y1vAdqxD2lr9Rq4Rgfhwfi2vRJWn6s4z1RT9vD2+EGrxn3lLaK18av
fHzce9op/hrujt84Po822VwA62M/8b/M/fEqf4rvNbfHS+Yr1n/jdzOfN/ex
Drb2sF6P86y14p60ro73staxdrdetva1/hb7ynqW97YOtL5ivWbtF99t3OfW
07yXtZf1ZetVaxp0Mf9jHYqe5hux/+L7N08xF0Q38yXrhtjz5r/NA+J6eH3+
s7kD/ot9xi+Yh8T3Fc8DvsZcF8djT/Nz5kGYEM8QfiauHffEXo7fXZtqLoSN
vBcaaPv4C7gZz614dmhreT2c4BORM/aMPk0rjG9473hOIRcejP3k+HTHiuBb
3id+93i26Ou0p3CST8JDsff0GVpRfMf7xm8ZzxZ9vVYfp/hk5I59qn+kFcMm
3g8Ntf28I27F9xbPGm0Db4DTfAryxF7WZ2rF8T3vj6e1A/xFxD9GDeLZo200
N8QZPhV5Y2/rs7QS+IEPwDPaQd4JiXFOPIu0b8xP43c+DW2132Mv4t64z7Rs
2mxzSWzmA/Gsdoh3RpL4O+JZpX1rfgZ/8Olop/0RexVp497UsmtzzKWwhQ9C
I+1w7Eckjb8jnmXad+Zn8SefgfzIoX+slcZWPhiNtSO8K+6Ic+J5p20yN8Jf
/CMUiD2iz9XKYBsfgue0X2Kv4844J56J2vfmxvibz0TB2Ef6J9oj2M6Hool2
NO5NJItztEraD+bncJbPQqHYg/o8rSx28NfRVDsWzwUkj3O0ytpmcxOc47NR
OPakPl97FDv5G2im/Rr3NlLEOVoVbYu5Kc7zOSgSe1T/VHsMP/I30TyeJfHs
QMo4R6uqbTU3wwX+MYrGHtU/0x7HLj4MLbTjvAfuinO0ato2c3P8w+eiWOxR
fYFWDrv5cLTUTvCeSBXnaNW17eYWuMg/QXHk0xdq5fETfwuttJP8VaSOc7Qa
2g5zS1zi89Be+5P3Q7rYL/yi9fU41/xv4u3/75Xw2v8BqnoiAQ==
        "]]}, 
      {RGBColor[1, 0, 0], Thickness[0.001], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]}, 
      {RGBColor[1, 0.5, 0], Thickness[0.001], Opacity[1.], 
       LineBox[CompressedData["
1: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
78Hd8HC8JPaAerx6qOcCP+t/xR8wVg==
        "]]}, 
      {RGBColor[0, 1, 0], Thickness[0.001], Opacity[1.], 
       LineBox[CompressedData["
1:eJwV1HfcjWUAx+FjJ7vIJqMI2WRLZCQ7lb1HiMreZJNZ9p6ZKZvsvWdm2cre
e3fdf1yf5/59nRfnPc950jVsU7V1lEgkUjRqJDI2TiTSIF4k8ihuJPIzBbij
zdOK8bfdi13aQDs1a+x6JGWc3lB77PwLBbmrzdeK84/dm93aIDsNf9r1ScZ4
vZH2xHk0hbinLdA+5rT9I3u0wXZa1toNSM4EvbH21HkMhbmvLdRKcMbuw15t
iP0u6+yGpGCi3kR75jyWIjzQFmmfcNbuyz7tJzsd6+1GpGSS3lR7Hn4XFOWh
tp+heno2aI1JxWS9mfYivHeK8Ug7wDA9Axu1JqRmit5cexneK8V5rB1kuJ6R
TVpT0jBV/0Z7Fd4bH/NEO8QI/T02a81IyzS9hfY6vBdK8FQ7zEj9fbZozXmX
6XpLLcJk+xOeaUcYpWViq/YN6Ziht9KiMMUuyXPtL37WMrNNa0F6ZurfalGZ
apfihXaUWbTWozFN/5SX2jFmM4dfmRvu33AP0sZrozPda0vzSjse7i++02Mw
Qy/Da+0Ev2gfsF1rSQYW6t9rMZlplyXCSX20loUddisyskj/QYvFLLscUfjN
Lsk5536c8roxdlZ22t+y3rkad5zfY5VzBa45D2eT85fcD3+fn2/r/Aaz7a2u
NfjMea1rFW4573StE36vzotdS7GP8/Z211ocor+90bU6B7gXvruu9Tgcngf+
vbGu2djLLn++zbUmB2ltb3D9gv3cDc8O17rhXnJe7VqR6847XGszwnmz61c8
CP8//0Y759jMscuzzrkqt52j8bvzp1xwHsA/fmac/SG77TZkYo1diRvOI8PP
eV17+01+tT8nOqf18Vp29tjfkZk/9A5aHObaFYjBGX0JHfW4zNMqEpOz+lKW
sZwVrGQVnbw2HvO9rhKxOKevprMenwVaZd7gvD5ByxF+3/b3fBDel95FS8BC
uwqxuaBP1HKGz9f+gSz8qXfVErLIrsqbXNQnabnC52W3JWu4d/RuWiJ+s6sR
h0v6ZC13uD/sdmQLn4/eXXuLxfYXxOVffYqWJ9wfdns+DPe43kN7m9/t6sTj
P32qljfcj3YHsod7Su+pJeYP+0vic1mfpuUL96fdkRzhHtZ7aUlYYn9FgvB5
2qW56DyQK1433c7PEbsTOcN3TO+tvcNS+2sSclWfoX3EX3ZncoX7V/9RS8oy
uwaJWGKX4ZLzIK553Uy7AEftLuRmi95HS8ZyuyZvsdQuy7/Og7kenoN2QY7Z
XckTvvd6Xy05K+xavM0yuxz/OQ/hRnhW2oU4bncjb/gO6/20FKy0a5OY5eFZ
wmXnn7gZnrN2YU7Y3ckXniF6fy0lq+w6JGGFXZ4rzkO5FZ7RdhFO2j3IH54F
+gAtFavturzDSvtzrjoP43Z4vttFOWX35KNwf9uVuek8Kvw+nb/mofMe1/rh
82Wnn/8f6TRHag==
        "]]}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.425855610855796, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7073945915062947`*^9, 3.70739526600224*^9, 3.7074707791979313`*^9, 
   3.707473386152131*^9, 3.707478620142308*^9, 3.7074789588641524`*^9, {
   3.707479231595009*^9, 3.7074792592850094`*^9}, 3.707479305242609*^9, 
   3.7074793706846094`*^9, 3.707479413725009*^9, 3.7074794705090094`*^9, {
   3.7074796020170093`*^9, 3.7074796207526093`*^9}, 3.7074800785814095`*^9, {
   3.7074801970774093`*^9, 3.707480222209009*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a1", "117.21214826827736`", "12.53466170487655`", "9.351042016768314`",
       "3.5471588934520046`*^-20"},
     {"a2", "131.85323402279064`", "10.63996878144389`", 
      "12.392257602554505`", "1.8632148327232478`*^-33"},
     {"a3", "72.83900271647485`", "4.642764210214193`", "15.68871461450213`", 
      "5.011814508983762`*^-51"},
     {"x01", "1.653099751568247`", "0.00035900332226825434`", 
      "4604.692071158658`", 
      "5.522646847858819188535026334284888`12.390690333342175*^-2799"},
     {"x02", "1.6233173319470195`", "0.0020379834819612033`", 
      "796.5311526395984`", 
      "2.366732982341439067258779175822940563418333137`12.390690333342175*^-\
1785"},
     {"x03", "1.602717678575139`", "0.0013108432947033556`", 
      "1222.661537844487`", 
      "1.043804025816969967553132472964608237745520316508`12.390690333342175*^\
-2032"},
     {"w1", "0.01821023976026502`", "0.0004097693892429753`", 
      "44.44021500460871`", "3.175072193246046`*^-265"},
     {"w2", "0.02693023619933299`", "0.0012371527802488534`", 
      "21.767914706473015`", "4.068739729056117`*^-90"},
     {"w3", "0.043023766143061415`", "0.00027197011872334193`", 
      "158.19298952774582`", 
      "2.4885919847241161057085373161063903659681`12.390690333342175*^-865"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7073945915062947`*^9, 3.70739526600224*^9, 3.7074707791979313`*^9, 
   3.707473386152131*^9, 3.707478620142308*^9, 3.7074789588641524`*^9, {
   3.707479231595009*^9, 3.7074792592850094`*^9}, 3.707479305242609*^9, 
   3.7074793706846094`*^9, 3.707479413725009*^9, 3.7074794705090094`*^9, {
   3.7074796020170093`*^9, 3.7074796207526093`*^9}, 3.7074800785814095`*^9, {
   3.7074801970774093`*^9, 3.707480222333809*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.350301102789037`", ",", "8.900632770317154`", ",", 
   "7.854961991930153`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7073945915062947`*^9, 3.70739526600224*^9, 3.7074707791979313`*^9, 
   3.707473386152131*^9, 3.707478620142308*^9, 3.7074789588641524`*^9, {
   3.707479231595009*^9, 3.7074792592850094`*^9}, 3.707479305242609*^9, 
   3.7074793706846094`*^9, 3.707479413725009*^9, 3.7074794705090094`*^9, {
   3.7074796020170093`*^9, 3.7074796207526093`*^9}, 3.7074800785814095`*^9, {
   3.7074801970774093`*^9, 3.7074802223806095`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.04288183761229166`", ",", "0.06341586001960742`", ",", 
   "0.10131322692640492`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7073945915062947`*^9, 3.70739526600224*^9, 3.7074707791979313`*^9, 
   3.707473386152131*^9, 3.707478620142308*^9, 3.7074789588641524`*^9, {
   3.707479231595009*^9, 3.7074792592850094`*^9}, 3.707479305242609*^9, 
   3.7074793706846094`*^9, 3.707479413725009*^9, 3.7074794705090094`*^9, {
   3.7074796020170093`*^9, 3.7074796207526093`*^9}, 3.7074800785814095`*^9, {
   3.7074801970774093`*^9, 3.7074802223962092`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Map-Fit", "Subsection",
 CellChangeTimes->{{3.707393306252246*^9, 3.7073933109552455`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Mapfitdata", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"treshholdintIntensity", "=", "10000"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Change", " ", "spectral", " ", "fit", " ", "area", " ", "in", " ", 
    "destdata", " ", "and", " ", "for", " ", "thresholdvalue", " ", "in", " ",
     "destarray"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{
     RowBox[{"Dimensions", "[", "destarray", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", 
      RowBox[{
       RowBox[{"Dimensions", "[", "destarray", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"destarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{";;", "1340"}]}], "]"}], "]"}], "]"}], ">", 
         "treshholdintIntensity"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"destdata", "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"energy", "[", 
              RowBox[{"[", ";;", "]"}], "]"}], ",", 
             RowBox[{"destarray", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", ";;"}], "]"}], "]"}]}], "}"}], 
           "]"}]}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"mapfit", "=", 
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{"destdata", ",", 
              RowBox[{"Totalgaus", "[", 
               RowBox[{
               "a1", ",", "a2", ",", "x01", ",", "x02", ",", "w1", ",", "w2", 
                ",", "x"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a1", ",", "500"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a2", ",", "500"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x01", ",", "750"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x02", ",", "800"}], "}"}], ",", "w1", ",", "w2"}], 
               "}"}], ",", "x"}], "]"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"mapfit", "=", 
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{"destdata", ",", 
            RowBox[{"Dreiergau\[SZ]", "[", 
             RowBox[{
             "a1", ",", "a2", ",", "a3", ",", "x01", ",", "x02", ",", "x03", 
              ",", "w1", ",", "w2", ",", "w3", ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a1", ",", "62"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a2", ",", "76"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a3", ",", "36"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x01", ",", "1.65"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x02", ",", "1.62"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x03", ",", "1.56"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"w1", ",", "0.013"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"w2", ",", "0.037"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"w3", ",", "0.066"}], "}"}]}], "}"}], ",", "x"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"harterfit", "[", "\"\<BestFitParameters\>\"", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "ga1", ",", "ga2", ",", "ga3", ",", "gx1", ",", "gx2", ",", 
              "gx3", ",", "gw1", ",", "gw2", ",", "gw3"}], "}"}], "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "a1", ",", "a2", ",", "a3", ",", "x01", ",", "x02", ",", "x03", 
               ",", "w1", ",", "w2", ",", "w3"}], "}"}], "/.", 
             RowBox[{"harterfit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}],
            ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"parameterarray", "=", 
          RowBox[{"mapfit", "[", "\"\<ParameterTableEntries\>\"", "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"ninepar", "=", 
          RowBox[{"parameterarray", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"int1", ",", "int2", ",", "int3"}], "}"}], "=", 
          RowBox[{
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"gaus1", "[", 
                RowBox[{"a1", ",", "x01", ",", "w1", ",", "0", ",", "x"}], 
                "]"}], ",", 
               RowBox[{"gaus1", "[", 
                RowBox[{"a2", ",", "x02", ",", "w2", ",", "0", ",", "x"}], 
                "]"}], ",", 
               RowBox[{"gaus1", "[", 
                RowBox[{"a3", ",", "x03", ",", "w3", ",", "0", ",", "x"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"Min", "[", "energy", "]"}], ",", 
               RowBox[{"Max", "[", "energy", "]"}]}], "}"}]}], "]"}], "/.", 
           RowBox[{"mapfit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fwhm1", ",", "fwhm2", ",", "fwhm3"}], "}"}], "=", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", "*", 
              RowBox[{"Log", "[", "2", "]"}]}], "]"}], "*", 
            RowBox[{"{", 
             RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}]}], "/.", 
           RowBox[{"mapfit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"peak1", "=", 
            RowBox[{
             RowBox[{"FindArgMax", "[", 
              RowBox[{
               RowBox[{"gaus1", "[", 
                RowBox[{"ga1", ",", "gx1", ",", "gw1", ",", "0", ",", "x"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"Min", "[", "energy", "]"}], ",", 
                 RowBox[{"Max", "[", "energy", "]"}]}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"peak2", "=", 
            RowBox[{
             RowBox[{"FindArgMax", "[", 
              RowBox[{
               RowBox[{"gaus1", "[", 
                RowBox[{"ga2", ",", "gx2", ",", "gw2", ",", "0", ",", "x"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"Min", "[", "energy", "]"}], ",", 
                 RowBox[{"Max", "[", "energy", "]"}]}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"peak3", "=", 
            RowBox[{
             RowBox[{"FindArgMax", "[", 
              RowBox[{
               RowBox[{"gaus1", "[", 
                RowBox[{"ga3", ",", "gx3", ",", "gw3", ",", "0", ",", "x"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"Min", "[", "energy", "]"}], ",", 
                 RowBox[{"Max", "[", "energy", "]"}]}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"diffpeak12", "=", 
            RowBox[{"peak2", "-", "peak1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"divpeakint12", "=", 
            RowBox[{"int1", "/", "int2"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Mapfitdata", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"Mapfitdata", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "j", ",", "ninepar", ",", 
              RowBox[{"{", 
               RowBox[{"int1", ",", "int2", ",", "int3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"fwhm1", ",", "fwhm2", ",", "fwhm3"}], "}"}]}], 
             "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Mapfitdata", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"Mapfitdata", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "j", ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                "0", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mapfit", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{
         RowBox[{"maparray", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "0"}], ",", " ", 
        RowBox[{
         RowBox[{"maparray", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "1"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7071305109103107`*^9, 3.70713057020924*^9}, {
   3.7071306589171095`*^9, 3.707130664301648*^9}, {3.70713072122734*^9, 
   3.707130749441161*^9}, {3.7071308095401707`*^9, 3.707130819868203*^9}, {
   3.7071482415144687`*^9, 3.7071483502484684`*^9}, {3.7071486648884687`*^9, 
   3.7071486992044687`*^9}, {3.7071488550744686`*^9, 
   3.7071488822974687`*^9}, {3.7071489737864685`*^9, 
   3.7071489756024685`*^9}, {3.7071491540574684`*^9, 
   3.7071492005354686`*^9}, {3.707149242188469*^9, 3.7071492908824687`*^9}, 
   3.7071496322304688`*^9, {3.7071497306254683`*^9, 3.7071497767744684`*^9}, {
   3.7071498078144684`*^9, 3.707149886728469*^9}, {3.7071499298064685`*^9, 
   3.707149994466469*^9}, {3.7071501225414686`*^9, 3.7071502060234685`*^9}, 
   3.707150245030469*^9, {3.707150345624469*^9, 3.7071503986204686`*^9}, {
   3.7071505937394686`*^9, 3.7071505942734685`*^9}, {3.7071913771092033`*^9, 
   3.707191380728565*^9}, {3.707191418052297*^9, 3.707191491868678*^9}, {
   3.707191566056096*^9, 3.7071915689113817`*^9}, {3.707194970595516*^9, 
   3.7071949764361*^9}, {3.7071954715456057`*^9, 3.7071954719606476`*^9}, {
   3.707195772987747*^9, 3.7071958518056283`*^9}, {3.7071958827807255`*^9, 
   3.707195885434991*^9}, {3.707196026033049*^9, 3.707196053011747*^9}, {
   3.707199804507637*^9, 3.707199865643957*^9}, {3.707199918717145*^9, 
   3.707199929307557*^9}, {3.7071999931682253`*^9, 3.7072000071133738`*^9}, {
   3.70720010185927*^9, 3.7072001300303416`*^9}, {3.707200473836504*^9, 
   3.7072004973613043`*^9}, {3.707200557951704*^9, 3.707200576546904*^9}, {
   3.707202867376177*^9, 3.707202867812974*^9}, {3.7072031014071217`*^9, 
   3.7072031283481493`*^9}, {3.7072031935089316`*^9, 
   3.7072033025210667`*^9}, {3.7072039258096623`*^9, 
   3.7072041017141347`*^9}, {3.7072042683054667`*^9, 
   3.7072043403927174`*^9}, {3.7072043961159177`*^9, 
   3.7072044117471175`*^9}, {3.7072044516517534`*^9, 
   3.7072045082627015`*^9}, {3.707204613731597*^9, 3.7072046230445585`*^9}, 
   3.7072046901540375`*^9, {3.707204750586957*^9, 3.707204803985072*^9}, {
   3.707204872951788*^9, 3.7072049066161566`*^9}, {3.707205425969579*^9, 
   3.707205431741579*^9}, {3.707205826988701*^9, 3.7072058544913244`*^9}, {
   3.7072060226582465`*^9, 3.707206024093437*^9}, {3.707206078069091*^9, 
   3.7072060796914806`*^9}, 3.7072068744723043`*^9, {3.707206910523673*^9, 
   3.707206927090767*^9}, {3.707206968898499*^9, 3.7072069827356105`*^9}, {
   3.7072070229677525`*^9, 3.707207053481157*^9}, {3.707207547608199*^9, 
   3.7072075516328697`*^9}, {3.7072076230941796`*^9, 
   3.7072076263076763`*^9}, {3.7072076714838285`*^9, 
   3.7072077664847836`*^9}, {3.7072078649341154`*^9, 
   3.7072078863838406`*^9}, {3.707208153156907*^9, 3.7072081793023396`*^9}, {
   3.7072082276620293`*^9, 3.7072082865672517`*^9}, {3.7072083284217834`*^9, 
   3.707208354473768*^9}, {3.7072084106493683`*^9, 3.707208413129768*^9}, {
   3.707208512501768*^9, 3.707208518445368*^9}, {3.707208552562278*^9, 
   3.7072085530146666`*^9}, {3.707208635864142*^9, 3.707208667266137*^9}, {
   3.707208740178667*^9, 3.707208743813374*^9}, {3.7072087839199457`*^9, 
   3.707208784403533*^9}, {3.7072088395481195`*^9, 3.7072088917294283`*^9}, {
   3.7072089853282285`*^9, 3.7072090128618755`*^9}, {3.7072090574618225`*^9, 
   3.7072091036843266`*^9}, {3.707209156817586*^9, 3.707209171450292*^9}, {
   3.707209215738408*^9, 3.7072092242871532`*^9}, {3.707298816388068*^9, 
   3.707298830786868*^9}, {3.707298870379668*^9, 3.707298874934868*^9}, {
   3.707298971904468*^9, 3.707298993994068*^9}, {3.7072990715728683`*^9, 
   3.707299110619668*^9}, {3.707299164970068*^9, 3.7072991677624683`*^9}, {
   3.707299630817268*^9, 3.707299634608068*^9}, {3.7072997518420677`*^9, 
   3.707299829795268*^9}, {3.707299860168468*^9, 3.7073000530000677`*^9}, {
   3.7073001179740677`*^9, 3.707300166178068*^9}, {3.7073002101515408`*^9, 
   3.707300220462281*^9}, {3.7073002529855704`*^9, 3.7073003523180923`*^9}, {
   3.707300391564421*^9, 3.707300394044615*^9}, {3.707301229734371*^9, 
   3.7073012378693714`*^9}, {3.707307843590356*^9, 3.707307849487156*^9}, {
   3.7073079782719555`*^9, 3.7073081149707556`*^9}, {3.707308146747956*^9, 
   3.707308149197156*^9}, {3.7073723203113513`*^9, 3.707372323368951*^9}, {
   3.707372576385351*^9, 3.707372577539751*^9}, {3.707372673994551*^9, 
   3.7073726853357515`*^9}, {3.7073727224325514`*^9, 
   3.7073727261453514`*^9}, {3.707372761916151*^9, 3.707372762321751*^9}, {
   3.7073727969693513`*^9, 3.707372985651351*^9}, {3.7073811642344456`*^9, 
   3.7073811901460457`*^9}, {3.7073812895804453`*^9, 
   3.7073812971776457`*^9}, {3.707393365832246*^9, 3.7073934095732455`*^9}, {
   3.7073934424192457`*^9, 3.707393598153246*^9}, {3.7073936382812457`*^9, 
   3.7073936421842456`*^9}, {3.7073936904612455`*^9, 
   3.7073937150762453`*^9}, {3.7073937564652452`*^9, 
   3.7073937792872458`*^9}, {3.7073939976049104`*^9, 3.70739405441059*^9}, 
   3.707481520187209*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "cvmit"}], "MessageName"], ":", 
  " ", "\<\"Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(\\*RowBox[{\\\"100\\\"}]\\)\[NoBreak] iterations. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", \
ButtonNote -> \\\"NonlinearModelFit::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7074733989341307`*^9, 3.707478467625019*^9, 
  3.707478626850136*^9, 3.7074815226052094`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "cvmit"}], "MessageName"], ":", 
  " ", "\<\"Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(\\*RowBox[{\\\"100\\\"}]\\)\[NoBreak] iterations. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", \
ButtonNote -> \\\"NonlinearModelFit::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7074733989341307`*^9, 3.707478467625019*^9, 
  3.707478626850136*^9, 3.707481524898409*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "cvmit"}], "MessageName"], ":", 
  " ", "\<\"Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(\\*RowBox[{\\\"100\\\"}]\\)\[NoBreak] iterations. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", \
ButtonNote -> \\\"NonlinearModelFit::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7074733989341307`*^9, 3.707478467625019*^9, 
  3.707478626850136*^9, 3.7074815265364094`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NonlinearModelFit\\\", \\\"::\\\", \\\
\"cvmit\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7074733989341307`*^9, 3.707478467625019*^9, 
  3.707478626850136*^9, 3.707481526630009*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate destdata-format \
(posx-posy-fitparameters[9-see-table-]-IntI[3]-FWHM[3])\n",
 Cell[BoxData[
  StyleBox[
   TagBox[GridBox[{
      {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
      {"a1", "120.18068459111323`", "0.7343875990391799`", 
       "163.647486352369`", 
       "5.73414799627274743552024977600580039025937`12.390690333342175*^-884"},
      {"a2", "119.62508421012716`", "2.2480454120302786`", 
       "53.212930472827985`", 
       "7.5071498871130564183815815308878609`12.390690333342175*^-332"},
      {"a3", "52.13007195892881`", "1.2085548985804049`", 
       "43.134219239988134`", "4.820899655334866`*^-255"},
      {"x01", "1.6538770513989225`", "0.00005536540606969286`", 
       "29872.029644595314`", 
       "7.9887135593220962135394414147298`12.390690333342175*^-3880"},
      {"x02", "1.6280919985408366`", "0.0002415878531118213`", 
       "6739.130206961435`", 
       "3.98180966819055514184545102259719526380625932`12.390690333342175*^-\
3019"},
      {"x03", "1.5711893023373509`", "0.00203542516703475`", 
       "771.9219196971472`", 
       "2.99025927903671973385123158705458511314205365`12.390690333342175*^-\
1767"},
      {"w1", "0.013555441647508975`", "0.0000743189240956828`", 
       "182.39555823032174`", 
       "5.50571479271660238510867647193943938241`12.390690333342175*^-944"},
      {"w2", "0.0359647409781123`", "0.00029485552043427316`", 
       "121.9741143904724`", 
       "8.16020043462711386941270387077526137402262142`12.390690333342175*^-\
725"},
      {"w3", "0.06207965021622732`", "0.0007668971786655976`", 
       "80.94911800855236`", 
       "1.755053143663061580500312110605227686419131`12.390690333342175*^-516"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
     GridBoxDividers->{
      "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
       "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{
      "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
    "Grid"], "DialogStyle",
   StripOnInput->False]], "Output",
  CellChangeTimes->{3.7073945915062947`*^9, 3.7073952661172404`*^9}]
}], "Subsection",
 CellChangeTimes->{{3.707394099461095*^9, 3.7073941608722353`*^9}, {
  3.7073941936735153`*^9, 3.7073942234024878`*^9}, {3.7073959527022405`*^9, 
  3.7073959632382402`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Export", " ", "2", "d", " ", "array", " ", "as", " ", "txt", " ", "with", 
    " ", "parameters", " ", "specified", " ", "in", " ", "Mapdata"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export 2D array with fitdata\>\"", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<X-map-SiO-WSe-300K.txt\>\"", ",", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Mapfitdata", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        "80"}], "]"}], ",", "\"\<Table\>\""}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707394243572505*^9, 3.707394314751622*^9}, {
  3.70739438683383*^9, 3.7073944175078964`*^9}}],

Cell[BoxData[
 ButtonBox[
  RowBox[{"\<\"Export 2D array with fitdata\"\>", 
   " ", "\<\"X-map-SiO-WSe-300K.txt\"\>"}],
  Appearance->Automatic,
  ButtonFunction:>{},
  Evaluator->None,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.707394427289875*^9, 3.7073953196992407`*^9, 
  3.707470846788331*^9, 3.707473437218131*^9, 3.7074786605296726`*^9, 
  3.707481689494009*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"convert", " ", "data", " ", "to", " ", "array"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fitarray", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0.0", ",", 
       RowBox[{"{", 
        RowBox[{"80", ",", "80", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fitarray", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Mapfitdata", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "80"}]}], ",", ";;"}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "80"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "80"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "fitarray", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.70739432973612*^9, 3.707394357208867*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"80", ",", "80", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.707394540904235*^9, 3.7073953197812405`*^9, 
  3.707470846887331*^9, 3.707473437308131*^9, 3.7074784517290263`*^9, 
  3.7074785083555746`*^9, 3.7074786606076703`*^9, 3.7074816895876093`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fitarray", "[", 
  RowBox[{"[", 
   RowBox[{"35", ",", "34", ",", ";;"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7073945554696913`*^9, 3.707394566425787*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35", ",", "34", ",", 
   RowBox[{"{", 
    RowBox[{
    "117.21214826827736`", ",", "131.85323402279064`", ",", 
     "72.83900271647485`", ",", "1.653099751568247`", ",", 
     "1.6233173319470195`", ",", "1.602717678575139`", ",", 
     "0.01821023976026502`", ",", "0.02693023619933299`", ",", 
     "0.043023766143061415`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.350301102789038`", ",", "8.900632770317157`", ",", 
     "7.854961991930155`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.04288183761229166`", ",", "0.06341586001960742`", ",", 
     "0.10131322692640492`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.707394567306875*^9, 3.7073953197942405`*^9, 
  3.7074708469093313`*^9, 3.707473437324131*^9, 3.70747866062327*^9, 
  3.7074816895876093`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recontruct fits with array", "Subsection",
 CellChangeTimes->{{3.7073946952386665`*^9, 3.7073947148876314`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"fit1", "=", " ", 
    RowBox[{"gaus1", "[", 
     RowBox[{
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "4"}], "]"}], "]"}], ",", 
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "7"}], "]"}], "]"}], ",", "0", 
      ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"fit2", "=", 
    RowBox[{"gaus1", "[", 
     RowBox[{
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "5"}], "]"}], "]"}], ",", 
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "8"}], "]"}], "]"}], ",", "0", 
      ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"fit3", "=", 
    RowBox[{"gaus1", "[", 
     RowBox[{
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "3"}], "]"}], "]"}], ",", 
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "6"}], "]"}], "]"}], ",", 
      RowBox[{"fitarray", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "3", ",", "9"}], "]"}], "]"}], ",", "0", 
      ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"fullfit", "=", " ", 
    RowBox[{"fit1", "+", "fit2", "+", "fit3"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.70739543353524*^9, 3.70739543742924*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["manipulate-map", "Subsection",
 CellChangeTimes->{{3.7073947826822405`*^9, 3.70739478919324*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"fitarray", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "3", ",", "1"}], "]"}], "]"}], 
       "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fit1", "=", " ", 
        RowBox[{"gaus1", "[", 
         RowBox[{
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "4"}], "]"}], "]"}], ",", 
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "7"}], "]"}], "]"}], ",", 
          "0", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fit2", "=", 
        RowBox[{"gaus1", "[", 
         RowBox[{
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "5"}], "]"}], "]"}], ",", 
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "8"}], "]"}], "]"}], ",", 
          "0", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fit3", "=", 
        RowBox[{"gaus1", "[", 
         RowBox[{
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "3"}], "]"}], "]"}], ",", 
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "6"}], "]"}], "]"}], ",", 
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "3", ",", "9"}], "]"}], "]"}], ",", 
          "0", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fullfit", "=", " ", 
        RowBox[{"fit1", "+", "fit2", "+", "fit3"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Convert", " ", "fits", " ", "from", " ", "fitplots", " ", "in", " ",
           "a", " ", "Table"}], ",", " ", 
         RowBox[{"stepsize", "=", 
          RowBox[{"deleV", 
           RowBox[{
            RowBox[{"(", "energyscale", ")"}], "/", "1340"}]}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Datafitplots", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "x", ",", "fit1", ",", "fit2", ",", "fit3", ",", "fullfit"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Min", "[", "energy", "]"}], ",", 
            RowBox[{"Max", "[", "energy", "]"}], ",", 
            "0.000266574626865671"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitgausanddata", "=", 
        RowBox[{
         RowBox[{"Show", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"energy", ",", 
                RowBox[{"destarray", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j", ",", 
                   RowBox[{";;", "1340"}]}], "]"}], "]"}]}], "}"}], "]"}], 
             ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"fitplots", "=", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
               "fullfit", ",", "\[IndentingNewLine]", "fit1", ",", 
                "\[IndentingNewLine]", "fit2", ",", "\[IndentingNewLine]", 
                "fit3"}], "}"}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"Min", "[", "energy", "]"}], ",", 
                RowBox[{"Max", "[", "energy", "]"}]}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<export fit-data-eV\>\"", ",", 
           RowBox[{"Export", "[", 
            RowBox[{
            "\"\<fitplots-mathematica.txt\>\"", ",", "Datafitplots", ",", 
             "\"\<Table\>\""}], "]"}]}], "]"}], 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<export raw-data\>\"", ",", 
           RowBox[{"Export", "[", 
            RowBox[{"\"\<fitplots-rawdata-mathematica.txt\>\"", ",", " ", 
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"energy", ",", 
                 RowBox[{"destarray", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", 
                    RowBox[{";;", "1340"}]}], "]"}], "]"}]}], "}"}], "]"}], 
              "]"}], ",", "\[IndentingNewLine]", "\"\<Table\>\""}], "]"}]}], 
          "]"}]}]}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"werte", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "5", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "5", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"fitarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "5", ",", "3"}], "]"}], "]"}]}], 
         "}"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "}"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "80", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "80", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.707377356065654*^9, {3.707377394784605*^9, 3.7073774047685413`*^9}, {
   3.7073813626352453`*^9, 3.7073813880476456`*^9}, {3.7073814514304457`*^9, 
   3.7073815042052455`*^9}, {3.7073815948880453`*^9, 
   3.7073815979300456`*^9}, {3.7073817488600454`*^9, 
   3.7073818288724456`*^9}, {3.707381910351246*^9, 3.7073819152028456`*^9}, {
   3.7073819704424458`*^9, 3.7073819706764455`*^9}, 3.7073820147776456`*^9, {
   3.707382069549246*^9, 3.7073821363952456`*^9}, {3.707382221337246*^9, 
   3.7073823209276457`*^9}, {3.7073824053236456`*^9, 
   3.7073824542140455`*^9}, {3.7073840281604457`*^9, 
   3.7073841204344454`*^9}, {3.707384190977646*^9, 3.7073843001776457`*^9}, {
   3.7073844524492455`*^9, 3.7073844761924458`*^9}, {3.7073845594964457`*^9, 
   3.7073846126144457`*^9}, {3.7073846640944457`*^9, 
   3.7073847919676456`*^9}, {3.7073848591724453`*^9, 
   3.7073848686260457`*^9}, {3.7073849283584456`*^9, 
   3.7073849667812457`*^9}, {3.7073850297252455`*^9, 
   3.7073850514872456`*^9}, {3.707385094590046*^9, 3.7073850959784455`*^9}, {
   3.7073851507032456`*^9, 3.7073851819968452`*^9}, {3.7073852224498453`*^9, 
   3.7073853323206453`*^9}, {3.7073857205110455`*^9, 3.707385734800646*^9}, {
   3.7073857665466456`*^9, 3.7073857684342456`*^9}, {3.707386599623046*^9, 
   3.7073866029146457`*^9}, {3.707387214499446*^9, 3.707387215373046*^9}, {
   3.7073873459294453`*^9, 3.707387380389846*^9}, {3.7073874365186453`*^9, 
   3.7073874398102455`*^9}, {3.7073875542518454`*^9, 3.707387570803446*^9}, {
   3.7073893123874454`*^9, 3.7073893307798457`*^9}, {3.7073893992482457`*^9, 
   3.7073893996694455`*^9}, {3.7073894303078456`*^9, 3.707389497590646*^9}, {
   3.7073895380258455`*^9, 3.707389542627846*^9}, {3.7073895817214456`*^9, 
   3.7073895875714455`*^9}, {3.7073899777132454`*^9, 3.707390131344246*^9}, 
   3.7073902084282455`*^9, {3.7073904364542456`*^9, 3.7073904550932455`*^9}, 
   3.7073904887962456`*^9, 3.707390558825246*^9, {3.7073949076232405`*^9, 
   3.7073950085192404`*^9}, {3.70739510124024*^9, 3.70739510149024*^9}, {
   3.707480470719409*^9, 3.7074805630402093`*^9}, {3.707480917955809*^9, 
   3.7074809295400095`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, $CellContext`j$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 80, 1}, {
      Hold[$CellContext`j$$], 1, 80, 1}}, Typeset`size$$ = {32., {0., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$457263$$ = 0, $CellContext`j$457264$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 1, $CellContext`j$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$457263$$, 0], 
        Hold[$CellContext`j$$, $CellContext`j$457264$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
          1] != 0, $CellContext`fit1 = $CellContext`gaus1[
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            1], 
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            4], 
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            7], 0, $CellContext`x]; $CellContext`fit2 = $CellContext`gaus1[
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            2], 
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            5], 
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            8], 0, $CellContext`x]; $CellContext`fit3 = $CellContext`gaus1[
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            3], 
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            6], 
           
           Part[$CellContext`fitarray, $CellContext`i$$, $CellContext`j$$, 3, 
            9], 0, $CellContext`x]; $CellContext`fullfit = $CellContext`fit1 + \
$CellContext`fit2 + $CellContext`fit3; $CellContext`Datafitplots = 
         Table[{$CellContext`x, $CellContext`fit1, $CellContext`fit2, \
$CellContext`fit3, $CellContext`fullfit}, {$CellContext`x, 
            Min[$CellContext`energy], 
            Max[$CellContext`energy], 
            0.000266574626865671}]; $CellContext`fitgausanddata = (Show[
             ListPlot[
              Transpose[{$CellContext`energy, 
                
                Part[$CellContext`destarray, $CellContext`i$$, \
$CellContext`j$$, 
                 Span[1, 1340]]}], ImageSize -> Large], $CellContext`fitplots = 
             Plot[{$CellContext`fullfit, $CellContext`fit1, \
$CellContext`fit2, $CellContext`fit3}, {$CellContext`x, 
                Min[$CellContext`energy], 
                Max[$CellContext`energy]}, PlotRange -> All, ImageSize -> 
               Large]] Button["export fit-data-eV", 
             Export[
             "fitplots-mathematica.txt", $CellContext`Datafitplots, "Table"]])
            Button["export raw-data", 
            Export["fitplots-rawdata-mathematica.txt", 
             Reverse[
              Transpose[{$CellContext`energy, 
                
                Part[$CellContext`destarray, $CellContext`i$$, \
$CellContext`j$$, 
                 Span[1, 1340]]}]], "Table"]], {}; Null], 
      "Specifications" :> {{$CellContext`i$$, 1, 80, 1}, {$CellContext`j$$, 1,
          80, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{255., {65., 72.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.70739484006124*^9, {3.7073950785152407`*^9, 3.7073951039272404`*^9}, 
   3.7073953208992405`*^9, 3.707470846994331*^9, 3.707473437409131*^9, 
   3.7074784385005655`*^9, 3.707478510711114*^9, 3.707478660701268*^9, {
   3.707480510203009*^9, 3.707480564444209*^9}, 3.707481692255209*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fitarray", "[", 
  RowBox[{"[", 
   RowBox[{"22", ",", "16", ",", "5", ",", "1"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitarray", "[", 
  RowBox[{"[", 
   RowBox[{"22", ",", "16", ",", "5", ",", "2"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitarray", "[", 
  RowBox[{"[", 
   RowBox[{"22", ",", "16", ",", "5", ",", "3"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitarray", "[", 
  RowBox[{"[", 
   RowBox[{"22", ",", "16", ",", "3", ",", "4"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitarray", "[", 
  RowBox[{"[", 
   RowBox[{"22", ",", "16", ",", "3", ",", "5"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitarray", "[", 
  RowBox[{"[", 
   RowBox[{"22", ",", "16", ",", "3", ",", "6"}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.707472216953931*^9, 3.707472270845931*^9}, {
  3.7074723016687307`*^9, 3.7074723237895308`*^9}, {3.707472628947131*^9, 
  3.707472645701531*^9}, {3.707472888967931*^9, 3.707472903491531*^9}, {
  3.707473623433131*^9, 3.707473640423131*^9}, {3.7074742655247307`*^9, 
  3.707474269658731*^9}, {3.707474467404331*^9, 3.707474473644331*^9}, {
  3.707474744772331*^9, 3.7074747576579313`*^9}, {3.707478404119047*^9, 
  3.7074784199682407`*^9}, {3.707478534063715*^9, 3.707478573187512*^9}, {
  3.707478685551515*^9, 3.7074786911674795`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.035383191686527385`"}]], "Output",
 CellChangeTimes->{
  3.7074784050238237`*^9, {3.7074784424004655`*^9, 3.7074784553169346`*^9}, {
   3.707478520336067*^9, 3.7074785747942705`*^9}, 3.707478660872864*^9, 
   3.707478691370278*^9, 3.707480441266609*^9, 3.7074805887958093`*^9}],

Cell[BoxData["0.05602641174054252`"], "Output",
 CellChangeTimes->{
  3.7074784050238237`*^9, {3.7074784424004655`*^9, 3.7074784553169346`*^9}, {
   3.707478520336067*^9, 3.7074785747942705`*^9}, 3.707478660872864*^9, 
   3.707478691370278*^9, 3.707480441266609*^9, 3.7074805887958093`*^9}],

Cell[BoxData["0.09003553502956405`"], "Output",
 CellChangeTimes->{
  3.7074784050238237`*^9, {3.7074784424004655`*^9, 3.7074784553169346`*^9}, {
   3.707478520336067*^9, 3.7074785747942705`*^9}, 3.707478660872864*^9, 
   3.707478691370278*^9, 3.707480441266609*^9, 3.7074805887958093`*^9}],

Cell[BoxData["1.6591623259012371`"], "Output",
 CellChangeTimes->{
  3.7074784050238237`*^9, {3.7074784424004655`*^9, 3.7074784553169346`*^9}, {
   3.707478520336067*^9, 3.7074785747942705`*^9}, 3.707478660872864*^9, 
   3.707478691370278*^9, 3.707480441266609*^9, 3.707480588811409*^9}],

Cell[BoxData["1.6418536584000503`"], "Output",
 CellChangeTimes->{
  3.7074784050238237`*^9, {3.7074784424004655`*^9, 3.7074784553169346`*^9}, {
   3.707478520336067*^9, 3.7074785747942705`*^9}, 3.707478660872864*^9, 
   3.707478691370278*^9, 3.707480441266609*^9, 3.707480588811409*^9}],

Cell[BoxData["1.6265389471434912`"], "Output",
 CellChangeTimes->{
  3.7074784050238237`*^9, {3.7074784424004655`*^9, 3.7074784553169346`*^9}, {
   3.707478520336067*^9, 3.7074785747942705`*^9}, 3.707478660872864*^9, 
   3.707478691370278*^9, 3.707480441266609*^9, 3.707480588811409*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "D"}], "-", "scan", "-", "Dynamic", "-", "Marker"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Specs", "=", " ", 
     RowBox[{"destarray", " ", "ohne", " ", "cosmics"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"intensity", "=", "destarray"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"xticks", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"0.1", "*", 
           RowBox[{
            RowBox[{"Dimensions", "[", "destarray", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "-", "1"}], "]"}], "*", "i", 
        "*", "j"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yticks", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"0.1", "*", 
           RowBox[{
            RowBox[{"Dimensions", "[", "destarray", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "-", "1"}], "]"}], "*", "i", 
        "*", "j"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wavelength", "=", "wave"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mymax", "[", "list_", "]"}], ":=", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{"list", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SW", "[", "list_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{"list", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "list", "]"}], "]"}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "*", 
        RowBox[{"Total", "[", "list", "]"}]}], "+", "0.01"}], 
      ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.70279335005273*^9, 3.70279335005273*^9}, {
   3.702978439946762*^9, 3.702978477417241*^9}, {3.7029785553689423`*^9, 
   3.702978617767742*^9}, 3.7029825359247956`*^9, {3.7029863077177973`*^9, 
   3.702986332786515*^9}, {3.7073953703292403`*^9, 3.7073953713632402`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}]}], ",", 
      RowBox[{"start", "=", "2"}], ",", 
      RowBox[{"stop", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "intensity", "]"}], "\[LeftDoubleBracket]",
         "3", "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"marker", " ", "=", " ", "2"}], ",", 
      RowBox[{"min", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"Min", "[", 
           RowBox[{"Min", "[", "intensity", "]"}], "]"}], "]"}]}], "]"}]}], 
      ",", 
      RowBox[{"max", "=", "5000"}], ",", 
      RowBox[{"range", "=", "50"}], ",", 
      RowBox[{"scalefactor", "=", "0.003"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"scale", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"max", "-", "min"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"scalefactor", " ", "max"}], "]"}], "-", 
             RowBox[{"Exp", "[", 
              RowBox[{"scalefactor", " ", "min"}], "]"}]}], ")"}]}], ")"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"scalefactor", "#"}], "]"}]}], "+", "min", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"max", "-", "min"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"scalefactor", 
              RowBox[{"(", 
               RowBox[{"max", "-", "min"}], ")"}]}], "]"}], "-", "1"}], 
           ")"}]}], ")"}]}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<start\>\"", ",", 
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "start", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "intensity", "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    ",", "1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{
                   "wavelength", "\[LeftDoubleBracket]", "start", 
                    "\[RightDoubleBracket]"}], "]"}], ",", " ", 
                  "\"\<nm\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<stop\>\"", ",", 
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "stop", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "intensity", "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    ",", "1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{
                   "wavelength", "\[LeftDoubleBracket]", "stop", 
                    "\[RightDoubleBracket]"}], "]"}], ",", "\"\<nm\>\""}], 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<marker\>\"", ",", " ", 
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "marker", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "intensity", "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    ",", "1"}], "}"}]}], "]"}], ",", " ", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{
                   "wavelength", "\[LeftDoubleBracket]", "marker", 
                    "\[RightDoubleBracket]"}], "]"}], ",", " ", 
                  "\"\<nm\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<range\>\"", ",", 
                  RowBox[{"Slider", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "range", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "1"}], "}"}]}], "]"}], 
                  ",", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"scale", "[", "range", "]"}], "]"}]}], "}"}]}], 
               "}"}], "]"}], ",", "\"\<    \>\"", ",", 
             RowBox[{"SetterBar", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", "func", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Max", ",", "Mean", ",", "SW"}], "}"}]}], "]"}]}], 
            "}"}], "}"}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"LocatorPane", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", 
              RowBox[{"{", "p1", "}"}], "]"}], ",", 
             RowBox[{"apl", "=", 
              RowBox[{"ArrayPlot", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"func", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"start", ",", "stop"}], "}"}]}], "]"}], "]"}], 
                   "&"}], ",", 
                  RowBox[{"Reverse", "[", "intensity", "]"}], ",", 
                  RowBox[{"{", "2", "}"}]}], "]"}], ",", 
                RowBox[{"PlotRange", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"All", ",", 
                   RowBox[{"scale", "[", "range", "]"}]}], "}"}]}], ",", " ", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}], ",", 
                RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"\"\<Coordinates: \>\"", "<>", 
                   RowBox[{"ToString", "[", " ", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"p1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"p1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "+", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], 
                  "]"}]}], ",", 
                RowBox[{"FrameTicks", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"yticks", ",", "xticks"}], "}"}]}]}], "]"}]}]}], 
            "]"}], "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Grid", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "Show", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ListPlot", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"energy", ",", 
                    RowBox[{"destarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{";;", "1340"}]}], "]"}], "]"}]}], "}"}], "]"}], 
                   ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"fitplots", "=", 
                  RowBox[{"Plot", "[", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gaus1", "[", 
                    RowBox[{
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "4"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "7"}], "]"}], "]"}], ",", "0", ",", "x"}], "]"}], 
                    "+", "\[IndentingNewLine]", 
                    RowBox[{"gaus1", "[", 
                    RowBox[{
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "5"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "8"}], "]"}], "]"}], ",", "0", ",", "x"}], "]"}], 
                    "+", "\[IndentingNewLine]", 
                    RowBox[{"gaus1", "[", 
                    RowBox[{
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "6"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "9"}], "]"}], "]"}], ",", "0", ",", "x"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"gaus1", "[", 
                    RowBox[{
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "4"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "7"}], "]"}], "]"}], ",", "0", ",", "x"}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"gaus1", "[", 
                    RowBox[{
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "5"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "8"}], "]"}], "]"}], ",", "0", ",", "x"}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"gaus1", "[", 
                    RowBox[{
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "6"}], "]"}], "]"}], ",", 
                    RowBox[{"fitarray", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "3", 
                    ",", "9"}], "]"}], "]"}], ",", "0", ",", "x"}], "]"}]}], 
                    "}"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Min", "[", "energy", "]"}], ",", 
                    RowBox[{"Max", "[", "energy", "]"}]}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"lp1", " ", "=", " ", 
                 RowBox[{"ListPlot", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"wavelength", ",", 
                    RowBox[{"intensity", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}]}], 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
                   RowBox[{"AxesOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "wavelength", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "1"}], ",", "0"}], 
                    "}"}]}], " ", ",", " ", 
                   RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "wavelength", "\[LeftDoubleBracket]", "start", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "wavelength", "\[LeftDoubleBracket]", "stop", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "wavelength", "\[LeftDoubleBracket]", "marker", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], ",", 
                   RowBox[{"AxesStyle", "\[Rule]", " ", "20"}], ",", 
                   RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", 
                   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", 
                   " ", 
                   RowBox[{"ImageSize", " ", "\[Rule]", " ", "Large"}]}], 
                  "]"}]}], "*)"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"N", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}]}], "}"}], 
                "]"}], "}"}]}], "}"}], "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Save Spectrum as PNG\>\"", ",", " ", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"\"\<spec-x\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "1"}],
                  "}"}], "]"}], "]"}], "<>", "\"\<-y\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "2"}],
                  "}"}], "]"}], "]"}], "<>", "\"\<.png\>\""}], ",", " ", 
             "lp1", ",", " ", "\"\<PNG\>\""}], "]"}]}], "]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Save Spectrum as txt-file\>\"", ",", " ", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"\"\<spec-x\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "1"}],
                  "}"}], "]"}], "]"}], "<>", "\"\<-y\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", "2"}],
                  "}"}], "]"}], "]"}], "<>", "\"\<.txt\>\""}], ",", " ", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"wavelength", ",", 
                RowBox[{"intensity", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    "p1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", ".5"}], "]"}]}], 
                 "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", " ", 
             "\"\<Table\>\""}], "]"}]}], "]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Save Map as PNG\>\"", ",", " ", 
           RowBox[{"Export", "[", 
            RowBox[{"\"\<map.png\>\"", ",", "apl", ",", "\"\<PNG\>\""}], 
            "]"}]}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Save Map as txt-file\>\"", ",", " ", 
           RowBox[{"Export", "[", 
            RowBox[{"\"\<map.txt\>\"", ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"func", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"start", ",", "stop"}], "}"}]}], "]"}], "]"}], 
                "&"}], ",", 
               RowBox[{"Reverse", "[", "intensity", "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", "\"\<Table\>\""}], 
            "]"}]}], "]"}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7016737667367554`*^9, 3.7016737861891737`*^9}, 
   3.701674469874953*^9, {3.701674509355774*^9, 3.701674510677735*^9}, 
   3.7016746113847456`*^9, {3.7016746697350416`*^9, 3.7016746878905134`*^9}, {
   3.701674759762417*^9, 3.7016748343782177`*^9}, {3.701674869443185*^9, 
   3.70167488494272*^9}, {3.7016750136329346`*^9, 3.7016750147029023`*^9}, 
   3.7016750818449106`*^9, {3.7016751133839645`*^9, 3.701675176560118*^9}, {
   3.7016752066752386`*^9, 3.701675226132661*^9}, {3.7016951656588244`*^9, 
   3.701695166718793*^9}, {3.7016973733004503`*^9, 3.701697374500414*^9}, {
   3.7016992179916525`*^9, 3.70169922705138*^9}, {3.702712871639537*^9, 
   3.7027128782694097`*^9}, {3.7029784080921745`*^9, 3.702978434065675*^9}, {
   3.7029793655705614`*^9, 3.7029793867081547`*^9}, {3.702981280918327*^9, 
   3.70298128439706*^9}, {3.7029868871218543`*^9, 3.702986892191757*^9}, {
   3.7029870922891088`*^9, 3.702987109667175*^9}, {3.703015181969611*^9, 
   3.7030151834402113`*^9}, {3.7030152216012473`*^9, 3.703015232845315*^9}, {
   3.7030492393356905`*^9, 3.7030492905892763`*^9}, {3.7031629091763725`*^9, 
   3.7031629147862606`*^9}, {3.7031630689851995`*^9, 
   3.7031631033965163`*^9}, {3.703169956561286*^9, 3.7031699590432367`*^9}, {
   3.703171208073081*^9, 3.7031712138489676`*^9}, {3.703171246826319*^9, 
   3.7031713875055385`*^9}, {3.703171448902328*^9, 3.7031714559421873`*^9}, {
   3.703171560234128*^9, 3.7031715613261065`*^9}, {3.703171597553388*^9, 
   3.703171604713245*^9}, 3.7031718118551683`*^9, {3.703171856324301*^9, 
   3.703171860464218*^9}, {3.707126717564014*^9, 3.707126772542511*^9}, {
   3.707211163351782*^9, 3.707211188436582*^9}, {3.707211267934182*^9, 
   3.707211282442182*^9}, 3.707211434777182*^9, {3.7072115456463823`*^9, 
   3.707211570372382*^9}, {3.7072116379337234`*^9, 3.707211669865082*^9}, {
   3.707480757260209*^9, 3.707480760739009*^9}, {3.707480802375409*^9, 
   3.707480815105009*^9}, {3.707480944204009*^9, 3.707481017102809*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`p1$$ = {17.099999999999998`, 
  36.6}, $CellContext`start$$ = 2, $CellContext`stop$$ = 
  1340, $CellContext`marker$$ = 2, $CellContext`min$$ = 
  0, $CellContext`max$$ = 5000, $CellContext`range$$ = 
  2632, $CellContext`scalefactor$$ = 0.003}, 
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          TagBox[GridBox[{
             {"\<\"start\"\>", 
              SliderBox[Dynamic[$CellContext`start$$], {2, 1340, 1}], 
              DynamicBox[ToBoxes[
                Part[$CellContext`wavelength, $CellContext`start$$], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}], "\<\"nm\"\>"},
             {"\<\"stop\"\>", 
              SliderBox[Dynamic[$CellContext`stop$$], {2, 1340, 1}], 
              DynamicBox[ToBoxes[
                Part[$CellContext`wavelength, $CellContext`stop$$], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}], "\<\"nm\"\>"},
             {"\<\"marker\"\>", 
              SliderBox[Dynamic[$CellContext`marker$$], {2, 1340, 1}], 
              DynamicBox[ToBoxes[
                Part[$CellContext`wavelength, $CellContext`marker$$], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}], "\<\"nm\"\>"},
             {"\<\"range\"\>", 
              SliderBox[Dynamic[$CellContext`range$$], {0, 5000, 1}], 
              DynamicBox[ToBoxes[
                $CellContext`scale[$CellContext`range$$], StandardForm],
               ImageSizeCache->{56., {0., 8.}}], ""}
            },
            AutoDelete->False,
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"], "\<\"    \"\>", 
          InterpretationBox[
           StyleBox[GridBox[{
              {
               SetterBox[Dynamic[$CellContext`func], {Max}, "Max"], 
               SetterBox[Dynamic[$CellContext`func], {Mean}, "Mean"], 
               SetterBox[Dynamic[$CellContext`func], {$CellContext`SW}, "SW"]}
             },
             BaselinePosition->{1, 1},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            Deployed->True],
           SetterBar[
            Dynamic[$CellContext`func], {Max, Mean, $CellContext`SW}]]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], ""},
     {
      DynamicBox[ToBoxes[
        LocatorPane[
         Dynamic[{$CellContext`p1$$}], $CellContext`apl = ArrayPlot[
           Map[$CellContext`func[
             Take[#, {$CellContext`start$$, $CellContext`stop$$}]]& , 
            Reverse[$CellContext`intensity], {2}], PlotRange -> {All, 
             $CellContext`scale[$CellContext`range$$]}, ImageSize -> Medium, 
           ColorFunction -> "Rainbow", PlotLabel -> Dynamic[
             StringJoin["Coordinates: ", 
              ToString[
               Round[{
                  Part[$CellContext`p1$$, 2], 
                  Part[$CellContext`p1$$, 1]} + {0.5, 0.5}]]]], 
           FrameTicks -> {$CellContext`yticks, $CellContext`xticks}]], 
        StandardForm],
       ImageSizeCache->{366., {194., 202.}}], 
      DynamicBox[ToBoxes[
        Grid[{{
           Show[
            ListPlot[
             Transpose[{$CellContext`energy, 
               Part[$CellContext`destarray, 
                Round[Part[$CellContext`p1$$, 2] + 0.5], 
                Round[Part[$CellContext`p1$$, 1] + 0.5], 
                Span[1, 1340]]}], ImageSize -> Large], $CellContext`fitplots = 
            Plot[{$CellContext`gaus1[
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 1], 
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 4], 
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 7], 
                 0, $CellContext`x] + $CellContext`gaus1[
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 2], 
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 5], 
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 8], 
                 0, $CellContext`x] + $CellContext`gaus1[
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 3], 
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 6], 
                 Part[$CellContext`fitarray, 
                  Round[Part[$CellContext`p1$$, 2] + 0.5], 
                  Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 9], 
                 0, $CellContext`x], 
               $CellContext`gaus1[
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 1], 
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 4], 
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 7], 
                0, $CellContext`x], 
               $CellContext`gaus1[
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 2], 
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 5], 
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 8], 
                0, $CellContext`x], 
               $CellContext`gaus1[
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 3], 
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 6], 
                Part[$CellContext`fitarray, 
                 Round[Part[$CellContext`p1$$, 2] + 0.5], 
                 Round[Part[$CellContext`p1$$, 1] + 0.5], 3, 9], 
                0, $CellContext`x]}, {$CellContext`x, 
               Min[$CellContext`energy], 
               Max[$CellContext`energy]}, PlotRange -> All, ImageSize -> 
              Large]]}, {
           N[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5]}]}}], StandardForm],
       ImageSizeCache->{576., {179., 186.}}]},
     {
      ButtonBox["\<\"Save Spectrum as PNG\"\>",
       Appearance->Automatic,
       ButtonFunction:>Export[
         StringJoin["spec-x", 
          IntegerString[
           Round[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5], 1}]], "-y", 
          IntegerString[
           Round[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5], 2}]], 
          ".png"], $CellContext`lp1, "PNG"],
       Evaluator->Automatic,
       Method->"Preemptive"], ""},
     {
      ButtonBox["\<\"Save Spectrum as txt-file\"\>",
       Appearance->Automatic,
       ButtonFunction:>Export[
         StringJoin["spec-x", 
          IntegerString[
           Round[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5], 1}]], "-y", 
          IntegerString[
           Round[{
             Round[Part[$CellContext`p1$$, 2] + 0.5], 
             Round[Part[$CellContext`p1$$, 1] + 0.5], 2}]], ".txt"], 
         Transpose[{$CellContext`wavelength, 
           Part[$CellContext`intensity, 
            Round[Part[$CellContext`p1$$, 2] + 0.5], 
            Round[Part[$CellContext`p1$$, 1] + 0.5]]}], "Table"],
       Evaluator->Automatic,
       Method->"Preemptive"], ""},
     {
      ButtonBox["\<\"Save Map as PNG\"\>",
       Appearance->Automatic,
       ButtonFunction:>Export["map.png", $CellContext`apl, "PNG"],
       Evaluator->Automatic,
       Method->"Preemptive"], ""},
     {
      ButtonBox["\<\"Save Map as txt-file\"\>",
       Appearance->Automatic,
       ButtonFunction:>Export["map.txt", 
         Map[$CellContext`func[
           Take[#, {$CellContext`start$$, $CellContext`stop$$}]]& , 
          Reverse[$CellContext`intensity], {2}], "Table"],
       Evaluator->Automatic,
       Method->"Preemptive"], ""}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.707480695125409*^9, 3.707480830876609*^9, {3.707481002969209*^9, 
   3.7074810247000093`*^9}, 3.707481697574809*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 968},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 103, 1, 43, "Subsection"],
Cell[686, 25, 96, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[807, 30, 288, 5, 84, "Input"],
Cell[1098, 37, 258, 4, 30, "Output"],
Cell[1359, 43, 362, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1758, 55, 260, 5, 30, "Input"],
Cell[2021, 62, 317, 5, 30, "Output"]
}, Open  ]],
Cell[2353, 70, 148, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[2526, 77, 2702, 76, 365, "Input"],
Cell[5231, 155, 243, 5, 30, "Output"],
Cell[5477, 162, 219, 4, 30, "Output"],
Cell[5699, 168, 254, 5, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6002, 179, 116, 1, 43, "Subsection"],
Cell[6121, 182, 2568, 74, 253, "Input"],
Cell[CellGroupData[{
Cell[8714, 260, 17485, 386, 754, "Input"],
Cell[26202, 648, 6553, 153, 678, "Output"]
}, Open  ]],
Cell[32770, 804, 112, 2, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32919, 811, 199, 2, 43, "Subsection"],
Cell[CellGroupData[{
Cell[33143, 817, 2573, 70, 234, "Input"],
Cell[35719, 889, 219, 4, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35987, 899, 106, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[36118, 904, 7100, 172, 720, "Input"],
Cell[43221, 1078, 96675, 1607, 366, "Output"],
Cell[139899, 2687, 2337, 46, 187, "Output"],
Cell[142239, 2735, 585, 11, 31, "Output"],
Cell[142827, 2748, 591, 11, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143467, 2765, 97, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[143589, 2770, 15045, 312, 812, "Input"],
Cell[158637, 3084, 591, 10, 21, "Message"],
Cell[159231, 3096, 589, 10, 21, "Message"],
Cell[159823, 3108, 591, 10, 21, "Message"],
Cell[160417, 3120, 631, 12, 21, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161097, 3138, 2500, 52, 221, "Subsection"],
Cell[CellGroupData[{
Cell[163622, 3194, 769, 17, 68, "Input"],
Cell[164394, 3213, 384, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164815, 3228, 1013, 30, 144, "Input"],
Cell[165831, 3260, 297, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166165, 3270, 189, 4, 31, "Input"],
Cell[166357, 3276, 827, 20, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167233, 3302, 118, 1, 49, "Subsection"],
Cell[167354, 3305, 1732, 44, 92, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169123, 3354, 103, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[169251, 3359, 8482, 182, 774, "Input"],
Cell[177736, 3543, 4620, 95, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182393, 3643, 1387, 32, 152, "Input"],
Cell[183783, 3677, 308, 5, 31, "Output"],
Cell[184094, 3684, 290, 4, 31, "Output"],
Cell[184387, 3690, 290, 4, 31, "Output"],
Cell[184680, 3696, 287, 4, 31, "Output"],
Cell[184970, 3702, 287, 4, 31, "Output"],
Cell[185260, 3708, 287, 4, 31, "Output"]
}, Open  ]],
Cell[185562, 3715, 2568, 74, 262, "Input"],
Cell[CellGroupData[{
Cell[188155, 3793, 31554, 697, 1104, "Input"],
Cell[219712, 4492, 9906, 218, 645, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

